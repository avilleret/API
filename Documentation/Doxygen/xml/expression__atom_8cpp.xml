<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="expression__atom_8cpp" kind="file" language="C++">
    <compoundname>expression_atom.cpp</compoundname>
    <includes refid="expression_8hpp" local="no">ossia/editor/expression/expression.hpp</includes>
    <includes refid="expression__atom_8hpp" local="no">ossia/editor/expression/expression_atom.hpp</includes>
    <incdepgraph>
      <node id="1397">
        <label>list</label>
      </node>
      <node id="1415">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1424">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1399">
        <label>functional</label>
      </node>
      <node id="1428">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="1401" relation="include">
        </childnode>
      </node>
      <node id="1419">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
      </node>
      <node id="1398">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="1392">
        <label>ossia/editor/expression/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
      </node>
      <node id="1427">
        <label>cmath</label>
      </node>
      <node id="1409">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="1410" relation="include">
        </childnode>
      </node>
      <node id="1418">
        <label>string</label>
      </node>
      <node id="1437">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1400">
        <label>ossia_export.h</label>
      </node>
      <node id="1393">
        <label>ossia/editor/expression/expression_atom.hpp</label>
        <link refid="expression__atom_8hpp_source"/>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1422">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1420">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="1421" relation="include">
        </childnode>
      </node>
      <node id="1436">
        <label>ossia/editor/expression/expression_pulse.hpp</label>
        <link refid="expression__pulse_8hpp_source"/>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1417">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
      </node>
      <node id="1402">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="1403" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
      </node>
      <node id="1396">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1406">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1423">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
      </node>
      <node id="1429">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="1411">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="1391">
        <label>expression_atom.cpp</label>
        <link refid="expression_atom.cpp"/>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
      </node>
      <node id="1413">
        <label>vector</label>
      </node>
      <node id="1426">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="1427" relation="include">
        </childnode>
      </node>
      <node id="1407">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1438">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
      </node>
      <node id="1405">
        <label>utility</label>
      </node>
      <node id="1421">
        <label>array</label>
      </node>
      <node id="1408">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="1409" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
      </node>
      <node id="1432">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="1416">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1414">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1404">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1405" relation="include">
        </childnode>
      </node>
      <node id="1401">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="1402" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1435">
        <label>ossia/editor/expression/expression_not.hpp</label>
        <link refid="expression__not_8hpp_source"/>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1395">
        <label>ossia/editor/expression/expression_fwd.hpp</label>
        <link refid="expression__fwd_8hpp_source"/>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1425">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="1426" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
      </node>
      <node id="1430">
        <label>boost/optional.hpp</label>
      </node>
      <node id="1431">
        <label>type_traits</label>
      </node>
      <node id="1403">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="1404" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1433">
        <label>ossia/editor/expression/expression_bool.hpp</label>
        <link refid="expression__bool_8hpp_source"/>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1410">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="1434">
        <label>ossia/editor/expression/expression_composition.hpp</label>
        <link refid="expression__composition_8hpp_source"/>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
      </node>
      <node id="1394">
        <label>memory</label>
      </node>
      <node id="1412">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1expressions">ossia::expressions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ossia/editor/expression/expression.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/editor/expression/expression_atom.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">expressions</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">expression_atom::~expression_atom()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">expression_atom::expression_atom(</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>lhs,<sp/><ref refid="classossia_1_1expressions_1_1expression__atom_1a730323235bea2f639e1829371ffe9273" kindref="member">expression_atom::Comparator</ref><sp/>op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>mFirstValue(lhs),<sp/>mOperator(op),<sp/>mSecondValue(rhs)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expression_atom::evaluate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>do_evaluation(mFirstValue,<sp/>mSecondValue);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expression_atom::update()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pull<sp/>value<sp/>of<sp/>the<sp/>first<sp/>operand<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFirstValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mFirstValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr-&gt;pullValue();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pull<sp/>value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSecondValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mSecondValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr-&gt;pullValue();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>expression_atom::getFirstOperand()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFirstValue;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">expression_atom::Comparator<sp/>expression_atom::getOperator()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="50"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOperator;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>expression_atom::getSecondOperand()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSecondValue;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expression_atom::onFirstCallbackAdded()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>first<sp/>operand<sp/>observation<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFirstValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mFirstValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFirstValueCallbackIndex<sp/>=<sp/>addr-&gt;add_callback(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>result)<sp/>{<sp/>firstValueCallback(result);<sp/>});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>second<sp/>operand<sp/>observation<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSecondValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mSecondValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSecondValueCallbackIndex<sp/>=<sp/>addr-&gt;add_callback(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>result)<sp/>{<sp/>secondValueCallback(result);<sp/>});</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expression_atom::onRemovingLastCallback()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>first<sp/>operand<sp/>observation<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFirstValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mFirstValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr-&gt;remove_callback(mFirstValueCallbackIndex);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>second<sp/>operand<sp/>observation<sp/>if<sp/>it<sp/>is<sp/>a<sp/>Destination</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSecondValue.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197aadb0ea4a02d4ddc10a515e2c0b7ea200" kindref="member">ossia::val_type::DESTINATION</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>mSecondValue.get&lt;Destination&gt;();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/>d.value-&gt;getAddress())</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addr-&gt;remove_callback(mSecondValueCallbackIndex);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expression_atom::do_evaluation(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>second)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mOperator)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::EQUAL:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>==<sp/>second;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::DIFFERENT:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>!=<sp/>second;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::GREATER_THAN:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>&gt;<sp/>second;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::LOWER_THAN:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>&lt;<sp/>second;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::GREATER_THAN_OR_EQUAL:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>&gt;=<sp/>second;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Comparator::LOWER_THAN_OR_EQUAL:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>&lt;=<sp/>second;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expression_atom::firstValueCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSecondValue.valid())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>send(do_evaluation(value,<sp/>mSecondValue));</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>expression_atom::secondValueCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value&amp;<sp/>value)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSecondValue.valid())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>send(do_evaluation(mFirstValue,<sp/>value));</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/expression/expression_atom.cpp"/>
  </compounddef>
</doxygen>
