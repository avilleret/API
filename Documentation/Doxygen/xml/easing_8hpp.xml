<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="easing_8hpp" kind="file" language="C++">
    <compoundname>easing.hpp</compoundname>
    <includes refid="math_8hpp" local="no">ossia/detail/math.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">ossia_export.h</includes>
    <includedby refid="editor_8hpp" local="no">editor.hpp</includedby>
    <incdepgraph>
      <node id="1201">
        <label>cmath</label>
      </node>
      <node id="1202">
        <label>ossia_export.h</label>
      </node>
      <node id="1199">
        <label>easing.hpp</label>
        <link refid="easing.hpp"/>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="1201" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1203">
        <label>easing.hpp</label>
        <link refid="easing.hpp"/>
        <childnode refid="1204" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>ossia.hpp</label>
        <link refid="ossia_8hpp_source"/>
      </node>
      <node id="1204">
        <label>editor.hpp</label>
        <link refid="editor_8hpp_source"/>
        <childnode refid="1205" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structossia_1_1easing_1_1ease" prot="public">ossia::easing::ease</innerclass>
    <innerclass refid="structossia_1_1easing_1_1linear" prot="public">ossia::easing::linear</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quadratic_in" prot="public">ossia::easing::quadraticIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quadratic_out" prot="public">ossia::easing::quadraticOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quadratic_in_out" prot="public">ossia::easing::quadraticInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1cubic_in" prot="public">ossia::easing::cubicIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1cubic_out" prot="public">ossia::easing::cubicOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1cubic_in_out" prot="public">ossia::easing::cubicInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quartic_in" prot="public">ossia::easing::quarticIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quartic_out" prot="public">ossia::easing::quarticOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quartic_in_out" prot="public">ossia::easing::quarticInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quintic_in" prot="public">ossia::easing::quinticIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quintic_out" prot="public">ossia::easing::quinticOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1quintic_in_out" prot="public">ossia::easing::quinticInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1sine_in" prot="public">ossia::easing::sineIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1sine_out" prot="public">ossia::easing::sineOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1sine_in_out" prot="public">ossia::easing::sineInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1circular_in" prot="public">ossia::easing::circularIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1circular_out" prot="public">ossia::easing::circularOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1circular_in_out" prot="public">ossia::easing::circularInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1exponential_in" prot="public">ossia::easing::exponentialIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1exponential_out" prot="public">ossia::easing::exponentialOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1exponential_in_out" prot="public">ossia::easing::exponentialInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1elastic_in" prot="public">ossia::easing::elasticIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1elastic_out" prot="public">ossia::easing::elasticOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1elastic_in_out" prot="public">ossia::easing::elasticInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1back_in" prot="public">ossia::easing::backIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1back_out" prot="public">ossia::easing::backOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1back_in_out" prot="public">ossia::easing::backInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1bounce_out" prot="public">ossia::easing::bounceOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1bounce_in" prot="public">ossia::easing::bounceIn</innerclass>
    <innerclass refid="structossia_1_1easing_1_1bounce_in_out" prot="public">ossia::easing::bounceInOut</innerclass>
    <innerclass refid="structossia_1_1easing_1_1perlin_in_out" prot="public">ossia::easing::perlinInOut</innerclass>
    <innerclass refid="structossia_1_1curve__segment__ease" prot="public">ossia::curve_segment_ease</innerclass>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1easing">ossia::easing</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>this file contains the implementation of various easing functions, to use in automation or mapper.</para><para>Easing functions by Kristoffer Gronlund, 2014 Public domain This work is a spiritual descendent (not to say derivative work) of works done by the following individuals: Warren Moore (<ulink url="https://github.com/warrenm">https://github.com/warrenm</ulink>) Robert Penner (<ulink url="http://www.robertpenner.com/easing/">http://www.robertpenner.com/easing/</ulink>) George McGinley Smith (<ulink url="http://gsgd.co.uk/sandbox/jquery/easing/">http://gsgd.co.uk/sandbox/jquery/easing/</ulink>) James Padolsey (<ulink url="http://james.padolsey.com/demos/jquery/easing/">http://james.padolsey.com/demos/jquery/easing/</ulink>) Authors of jQuery (<ulink url="http://plugins.jquery.com/project/Easing">http://plugins.jquery.com/project/Easing</ulink>) Matt Gallagher (<ulink url="http://cocoawithlove.com/2008/09/parametric-acceleration-curves-in-core.html">http://cocoawithlove.com/2008/09/parametric-acceleration-curves-in-core.html</ulink>) Jesse Crossen (<ulink url="http://stackoverflow.com/questions/5161465/how-to-create-custom-easing-function-with-core-animation">http://stackoverflow.com/questions/5161465/how-to-create-custom-easing-function-with-core-animation</ulink>) </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="math_8hpp" kindref="compound">ossia/detail/math.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">easing</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34" refid="structossia_1_1easing_1_1ease" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1ease" kindref="compound">ease</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>a,<sp/>T<sp/>b,<sp/>T<sp/>t)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>(b<sp/>-<sp/>a)<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43" refid="structossia_1_1easing_1_1linear" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1linear" kindref="compound">linear</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52" refid="structossia_1_1easing_1_1quadratic_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quadratic_in" kindref="compound">quadraticIn</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61" refid="structossia_1_1easing_1_1quadratic_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quadratic_out" kindref="compound">quadraticOut</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(t<sp/>*<sp/>(t<sp/>-<sp/>2.));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="70" refid="structossia_1_1easing_1_1quadratic_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quadratic_in_out" kindref="compound">quadraticInOut</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)<sp/>?<sp/>2.<sp/>*<sp/>t<sp/>*<sp/>t<sp/>:<sp/>(-2.<sp/>*<sp/>t<sp/>*<sp/>t)<sp/>+<sp/>(4.<sp/>*<sp/>t)<sp/>-<sp/>1.;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="79" refid="structossia_1_1easing_1_1cubic_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1cubic_in" kindref="compound">cubicIn</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88" refid="structossia_1_1easing_1_1cubic_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1cubic_out" kindref="compound">cubicOut</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>t<sp/>-<sp/>1.;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="98" refid="structossia_1_1easing_1_1cubic_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1cubic_in_out" kindref="compound">cubicInOut</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>T(0.5))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4.<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>(2.<sp/>*<sp/>t)<sp/>-<sp/>2.;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115" refid="structossia_1_1easing_1_1quartic_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quartic_in" kindref="compound">quarticIn</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="124" refid="structossia_1_1easing_1_1quartic_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quartic_out" kindref="compound">quarticOut</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>t<sp/>-<sp/>1.;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>(1.<sp/>-<sp/>t)<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="134" refid="structossia_1_1easing_1_1quartic_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quartic_in_out" kindref="compound">quarticInOut</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8.<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>(t<sp/>-<sp/>1.);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-8.<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="151" refid="structossia_1_1easing_1_1quintic_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quintic_in" kindref="compound">quinticIn</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="160" refid="structossia_1_1easing_1_1quintic_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quintic_out" kindref="compound">quinticOut</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>(t<sp/>-<sp/>1.);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="170" refid="structossia_1_1easing_1_1quintic_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1quintic_in_out" kindref="compound">quinticInOut</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16.<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>f<sp/>=<sp/>((2.<sp/>*<sp/>t)<sp/>-<sp/>2.);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="187" refid="structossia_1_1easing_1_1sine_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1sine_in" kindref="compound">sineIn</ref></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sin((t<sp/>-<sp/>1.)<sp/>*<sp/>half_pi)<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="196" refid="structossia_1_1easing_1_1sine_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1sine_out" kindref="compound">sineOut</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sin(t<sp/>*<sp/>half_pi);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="205" refid="structossia_1_1easing_1_1sine_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1sine_in_out" kindref="compound">sineInOut</ref></highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(1.<sp/>-<sp/>std::cos(t<sp/>*<sp/>pi));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="214" refid="structossia_1_1easing_1_1circular_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1circular_in" kindref="compound">circularIn</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.<sp/>-<sp/>std::sqrt(1.<sp/>-<sp/>(t<sp/>*<sp/>t));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="223" refid="structossia_1_1easing_1_1circular_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1circular_out" kindref="compound">circularOut</ref></highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt((2.<sp/>-<sp/>t)<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="232" refid="structossia_1_1easing_1_1circular_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1circular_in_out" kindref="compound">circularInOut</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(1<sp/>-<sp/>std::sqrt(1<sp/>-<sp/>4.<sp/>*<sp/>(t<sp/>*<sp/>t)));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(std::sqrt(-((2.<sp/>*<sp/>t)<sp/>-<sp/>3.)<sp/>*<sp/>((2.<sp/>*<sp/>t)<sp/>-<sp/>1.))<sp/>+<sp/>1.);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="248" refid="structossia_1_1easing_1_1exponential_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1exponential_in" kindref="compound">exponentialIn</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>0)<sp/>?<sp/>t<sp/>:<sp/>std::pow(2.,<sp/>10.<sp/>*<sp/>(t<sp/>-<sp/>1.));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257" refid="structossia_1_1easing_1_1exponential_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1exponential_out" kindref="compound">exponentialOut</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>1.)<sp/>?<sp/>t<sp/>:<sp/>1.<sp/>-<sp/>std::pow(2.,<sp/>-10.<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="266" refid="structossia_1_1easing_1_1exponential_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1exponential_in_out" kindref="compound">exponentialInOut</ref></highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>0.<sp/>||<sp/>t<sp/>&gt;=<sp/>1.)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>std::pow(2.,<sp/>(20.<sp/>*<sp/>t)<sp/>-<sp/>10.);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-0.5<sp/>*<sp/>std::pow(2.,<sp/>(-20.<sp/>*<sp/>t)<sp/>+<sp/>10.)<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="285" refid="structossia_1_1easing_1_1elastic_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1elastic_in" kindref="compound">elasticIn</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sin(13.<sp/>*<sp/>half_pi<sp/>*<sp/>t)<sp/>*<sp/>std::pow(2.,<sp/>10.<sp/>*<sp/>(t<sp/>-<sp/>1.));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="294" refid="structossia_1_1easing_1_1elastic_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1elastic_out" kindref="compound">elasticOut</ref></highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sin(-13.<sp/>*<sp/>half_pi<sp/>*<sp/>(t<sp/>+<sp/>1.))<sp/>*<sp/>std::pow(2.,<sp/>-10.<sp/>*<sp/>t)<sp/>+<sp/>1.;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="303" refid="structossia_1_1easing_1_1elastic_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1elastic_in_out" kindref="compound">elasticInOut</ref></highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>std::sin(13.<sp/>*<sp/>half_pi<sp/>*<sp/>(2.<sp/>*<sp/>t))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::pow(2.,<sp/>10.<sp/>*<sp/>((2.<sp/>*<sp/>t)<sp/>-<sp/>1.));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(std::sin(-13.<sp/>*<sp/>half_pi<sp/>*<sp/>((2.<sp/>*<sp/>t<sp/>-<sp/>1)<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::pow(2.,<sp/>-10.<sp/>*<sp/>(2.<sp/>*<sp/>t<sp/>-<sp/>1.))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>2.);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="322" refid="structossia_1_1easing_1_1back_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1back_in" kindref="compound">backIn</ref></highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>-<sp/>t<sp/>*<sp/>std::sin(t<sp/>*<sp/>pi);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="331" refid="structossia_1_1easing_1_1back_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1back_out" kindref="compound">backOut</ref></highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>1.<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.<sp/>-<sp/>(f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>-<sp/>f<sp/>*<sp/>std::sin(f<sp/>*<sp/>pi));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="341" refid="structossia_1_1easing_1_1back_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1back_in_out" kindref="compound">backInOut</ref></highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>2.<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>-<sp/>f<sp/>*<sp/>std::sin(f<sp/>*<sp/>pi));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>f<sp/>=<sp/>(1.<sp/>-<sp/>(2.<sp/>*<sp/>t<sp/>-<sp/>1.));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(1.<sp/>-<sp/>(f<sp/>*<sp/>f<sp/>*<sp/>f<sp/>-<sp/>f<sp/>*<sp/>std::sin(f<sp/>*<sp/>pi)))<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="359" refid="structossia_1_1easing_1_1bounce_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1bounce_out" kindref="compound">bounceOut</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>4.<sp/>/<sp/>11.)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(121.<sp/>*<sp/>t<sp/>*<sp/>t)<sp/>/<sp/>16.;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>8.<sp/>/<sp/>11.)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(363.<sp/>/<sp/>40.<sp/>*<sp/>t<sp/>*<sp/>t)<sp/>-<sp/>(99<sp/>/<sp/>10.<sp/>*<sp/>t)<sp/>+<sp/>17<sp/>/<sp/>5.;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>9.<sp/>/<sp/>10.)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(4356.<sp/>/<sp/>361.<sp/>*<sp/>t<sp/>*<sp/>t)<sp/>-<sp/>(35442.<sp/>/<sp/>1805.<sp/>*<sp/>t)<sp/>+<sp/>16061.<sp/>/<sp/>1805.;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(54.<sp/>/<sp/>5.<sp/>*<sp/>t<sp/>*<sp/>t)<sp/>-<sp/>(513.<sp/>/<sp/>25.<sp/>*<sp/>t)<sp/>+<sp/>268.<sp/>/<sp/>25.;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal">};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="383" refid="structossia_1_1easing_1_1bounce_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1bounce_in" kindref="compound">bounceIn</ref></highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.<sp/>-<sp/><ref refid="structossia_1_1easing_1_1bounce_out" kindref="compound">bounceOut&lt;T&gt;</ref>{}(1.<sp/>-<sp/>t);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="392" refid="structossia_1_1easing_1_1bounce_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1bounce_in_out" kindref="compound">bounceInOut</ref></highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/><ref refid="structossia_1_1easing_1_1bounce_in" kindref="compound">bounceIn&lt;T&gt;</ref>{}(t<sp/>*<sp/>2.);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/><ref refid="structossia_1_1easing_1_1bounce_out" kindref="compound">bounceOut&lt;T&gt;</ref>{}(t<sp/>*<sp/>2.<sp/>-<sp/>1.)<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal">};</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="408" refid="structossia_1_1easing_1_1perlin_in_out" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1easing_1_1perlin_in_out" kindref="compound">perlinInOut</ref></highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/>operator()(T<sp/>t)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>t3<sp/>=<sp/>t<sp/>*<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>t4<sp/>=<sp/>t3<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>t5<sp/>=<sp/>t4<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6.<sp/>*<sp/>t5<sp/>-<sp/>15.<sp/>*<sp/>t4<sp/>+<sp/>10.<sp/>*<sp/>t3;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Y,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Easing&gt;</highlight></codeline>
<codeline lineno="421" refid="structossia_1_1curve__segment__ease" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structossia_1_1curve__segment__ease" kindref="compound">curve_segment_ease</ref></highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>Y<sp/>operator()(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio,<sp/>Y<sp/>start,<sp/>Y<sp/>end)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="424"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start<sp/>+<sp/>Easing{}(ratio)<sp/>*<sp/>(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal">};</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/curve/curve_segment/easing.hpp"/>
  </compounddef>
</doxygen>
