<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_time_node__impl_8cpp" kind="file" language="C++">
    <compoundname>TimeNode_impl.cpp</compoundname>
    <includes refid="_time_node__impl_8hpp" local="yes">TimeNode_impl.hpp</includes>
    <includes refid="_time_event__impl_8hpp" local="yes">TimeEvent_impl.hpp</includes>
    <incdepgraph>
      <node id="5386">
        <label>list</label>
      </node>
      <node id="5404">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5444">
        <label>atomic</label>
      </node>
      <node id="5413">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="5414" relation="include">
        </childnode>
      </node>
      <node id="5388">
        <label>functional</label>
      </node>
      <node id="5439">
        <label>ossia/editor/scenario/time_process.hpp</label>
        <link refid="time__process_8hpp_source"/>
        <childnode refid="5440" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
      </node>
      <node id="5417">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="5390" relation="include">
        </childnode>
      </node>
      <node id="5442">
        <label>ossia/editor/state/message.hpp</label>
        <link refid="message_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5390" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5394" relation="include">
        </childnode>
      </node>
      <node id="5450">
        <label>ossia/editor/scenario/detail/TimeProcess_impl.hpp</label>
        <link refid="_time_process__impl_8hpp_source"/>
        <childnode refid="5430" relation="include">
        </childnode>
      </node>
      <node id="5408">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="5401" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5402" relation="include">
        </childnode>
      </node>
      <node id="5434">
        <label>TimeEvent_impl.hpp</label>
        <link refid="_time_event__impl_8hpp_source"/>
        <childnode refid="5381" relation="include">
        </childnode>
        <childnode refid="5428" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5432" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5437" relation="include">
        </childnode>
        <childnode refid="5380" relation="include">
        </childnode>
        <childnode refid="5449" relation="include">
        </childnode>
      </node>
      <node id="5443">
        <label>Clock_impl.hpp</label>
        <link refid="_clock__impl_8hpp_source"/>
        <childnode refid="5444" relation="include">
        </childnode>
        <childnode refid="5431" relation="include">
        </childnode>
        <childnode refid="5416" relation="include">
        </childnode>
        <childnode refid="5445" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5447" relation="include">
        </childnode>
        <childnode refid="5448" relation="include">
        </childnode>
        <childnode refid="5429" relation="include">
        </childnode>
      </node>
      <node id="5387">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="5381">
        <label>ossia/editor/expression/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="5382" relation="include">
        </childnode>
        <childnode refid="5422" relation="include">
        </childnode>
        <childnode refid="5423" relation="include">
        </childnode>
        <childnode refid="5424" relation="include">
        </childnode>
        <childnode refid="5425" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
      </node>
      <node id="5416">
        <label>cmath</label>
      </node>
      <node id="5398">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="5399" relation="include">
        </childnode>
      </node>
      <node id="5407">
        <label>string</label>
      </node>
      <node id="5426">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="5385" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5400" relation="include">
        </childnode>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
        <childnode refid="5421" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5389">
        <label>ossia_export.h</label>
      </node>
      <node id="5382">
        <label>ossia/editor/expression/expression_atom.hpp</label>
        <link refid="expression__atom_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5390" relation="include">
        </childnode>
        <childnode refid="5411" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5411">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="5385" relation="include">
        </childnode>
        <childnode refid="5398" relation="include">
        </childnode>
        <childnode refid="5400" relation="include">
        </childnode>
        <childnode refid="5412" relation="include">
        </childnode>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5421" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5430">
        <label>ossia/editor/scenario/time_value.hpp</label>
        <link refid="time__value_8hpp_source"/>
        <childnode refid="5416" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5409">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="5410" relation="include">
        </childnode>
      </node>
      <node id="5425">
        <label>ossia/editor/expression/expression_pulse.hpp</label>
        <link refid="expression__pulse_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5390" relation="include">
        </childnode>
        <childnode refid="5411" relation="include">
        </childnode>
        <childnode refid="5426" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5406">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
      </node>
      <node id="5447">
        <label>ratio</label>
      </node>
      <node id="5391">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="5392" relation="include">
        </childnode>
        <childnode refid="5395" relation="include">
        </childnode>
        <childnode refid="5396" relation="include">
        </childnode>
        <childnode refid="5397" relation="include">
        </childnode>
        <childnode refid="5403" relation="include">
        </childnode>
        <childnode refid="5404" relation="include">
        </childnode>
        <childnode refid="5405" relation="include">
        </childnode>
        <childnode refid="5406" relation="include">
        </childnode>
        <childnode refid="5408" relation="include">
        </childnode>
        <childnode refid="5409" relation="include">
        </childnode>
      </node>
      <node id="5385">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="5386" relation="include">
        </childnode>
      </node>
      <node id="5395">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5412">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="5413" relation="include">
        </childnode>
        <childnode refid="5414" relation="include">
        </childnode>
      </node>
      <node id="5379">
        <label>TimeNode_impl.cpp</label>
        <link refid="TimeNode_impl.cpp"/>
        <childnode refid="5380" relation="include">
        </childnode>
        <childnode refid="5434" relation="include">
        </childnode>
      </node>
      <node id="5418">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="5400">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="5445">
        <label>ctime</label>
      </node>
      <node id="5402">
        <label>vector</label>
      </node>
      <node id="5437">
        <label>Scenario_impl.hpp</label>
        <link refid="_scenario__impl_8hpp_source"/>
        <childnode refid="5438" relation="include">
        </childnode>
        <childnode refid="5428" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5432" relation="include">
        </childnode>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5443" relation="include">
        </childnode>
        <childnode refid="5437" relation="include">
        </childnode>
        <childnode refid="5434" relation="include">
        </childnode>
        <childnode refid="5380" relation="include">
        </childnode>
        <childnode refid="5449" relation="include">
        </childnode>
        <childnode refid="5450" relation="include">
        </childnode>
        <childnode refid="5386" relation="include">
        </childnode>
        <childnode refid="5394" relation="include">
        </childnode>
      </node>
      <node id="5429">
        <label>ossia/editor/scenario/clock.hpp</label>
        <link refid="clock_8hpp_source"/>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5431" relation="include">
        </childnode>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5415">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="5416" relation="include">
        </childnode>
      </node>
      <node id="5396">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5427">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5402" relation="include">
        </childnode>
      </node>
      <node id="5394">
        <label>utility</label>
      </node>
      <node id="5410">
        <label>array</label>
      </node>
      <node id="5397">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="5398" relation="include">
        </childnode>
        <childnode refid="5400" relation="include">
        </childnode>
        <childnode refid="5401" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5402" relation="include">
        </childnode>
      </node>
      <node id="5421">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="5428">
        <label>ossia/editor/scenario/time_constraint.hpp</label>
        <link refid="time__constraint_8hpp_source"/>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5429" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5405">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5403">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5433">
        <label>ossia/editor/scenario/time_event.hpp</label>
        <link refid="time__event_8hpp_source"/>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5393">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="5389" relation="include">
        </childnode>
        <childnode refid="5394" relation="include">
        </childnode>
      </node>
      <node id="5436">
        <label>ossia/editor/state/state_element_fwd.hpp</label>
        <link refid="state__element__fwd_8hpp_source"/>
        <childnode refid="5387" relation="include">
        </childnode>
      </node>
      <node id="5380">
        <label>TimeNode_impl.hpp</label>
        <link refid="_time_node__impl_8hpp_source"/>
        <childnode refid="5381" relation="include">
        </childnode>
        <childnode refid="5428" relation="include">
        </childnode>
        <childnode refid="5432" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
      </node>
      <node id="5435">
        <label>ossia/editor/state/state.hpp</label>
        <link refid="state_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5436" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5390">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="5391" relation="include">
        </childnode>
        <childnode refid="5387" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5424">
        <label>ossia/editor/expression/expression_not.hpp</label>
        <link refid="expression__not_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5438">
        <label>ossia/editor/scenario/scenario.hpp</label>
        <link refid="scenario_8hpp_source"/>
        <childnode refid="5429" relation="include">
        </childnode>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5384">
        <label>ossia/editor/expression/expression_fwd.hpp</label>
        <link refid="expression__fwd_8hpp_source"/>
        <childnode refid="5385" relation="include">
        </childnode>
        <childnode refid="5387" relation="include">
        </childnode>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5440">
        <label>ossia/editor/state/state_element.hpp</label>
        <link refid="state__element_8hpp_source"/>
        <childnode refid="5441" relation="include">
        </childnode>
        <childnode refid="5442" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5436" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5446">
        <label>mutex</label>
      </node>
      <node id="5431">
        <label>chrono</label>
      </node>
      <node id="5414">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="5415" relation="include">
        </childnode>
        <childnode refid="5390" relation="include">
        </childnode>
        <childnode refid="5417" relation="include">
        </childnode>
        <childnode refid="5418" relation="include">
        </childnode>
        <childnode refid="5419" relation="include">
        </childnode>
        <childnode refid="5420" relation="include">
        </childnode>
      </node>
      <node id="5419">
        <label>boost/optional.hpp</label>
      </node>
      <node id="5448">
        <label>thread</label>
      </node>
      <node id="5420">
        <label>type_traits</label>
      </node>
      <node id="5392">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="5393" relation="include">
        </childnode>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5422">
        <label>ossia/editor/expression/expression_bool.hpp</label>
        <link refid="expression__bool_8hpp_source"/>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5399">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="5423">
        <label>ossia/editor/expression/expression_composition.hpp</label>
        <link refid="expression__composition_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5384" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5383">
        <label>memory</label>
      </node>
      <node id="5401">
        <label>initializer_list</label>
      </node>
      <node id="5441">
        <label>ossia/editor/state/custom_state.hpp</label>
        <link refid="custom__state_8hpp_source"/>
        <childnode refid="5388" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5432">
        <label>ossia/editor/scenario/time_node.hpp</label>
        <link refid="time__node_8hpp_source"/>
        <childnode refid="5383" relation="include">
        </childnode>
        <childnode refid="5407" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5381" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5389" relation="include">
        </childnode>
      </node>
      <node id="5449">
        <label>ossia/editor/scenario/detail/TimeConstraint_impl.hpp</label>
        <link refid="_time_constraint__impl_8hpp_source"/>
        <childnode refid="5429" relation="include">
        </childnode>
        <childnode refid="5428" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5443" relation="include">
        </childnode>
        <childnode refid="5434" relation="include">
        </childnode>
        <childnode refid="5380" relation="include">
        </childnode>
        <childnode refid="5449" relation="include">
        </childnode>
        <childnode refid="5450" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1detail">ossia::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TimeNode_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TimeEvent_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">time_node_impl::time_node_impl(<ref refid="classossia_1_1time__node_1a46bc218d36df49a7ade39f8ea51ac744" kindref="member">time_node::execution_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>mCallback(callback),<sp/>mExpression(expressions::make_expression_true())</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">time_node_impl::~time_node_impl()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_node_impl::setCallback(<ref refid="classossia_1_1time__node_1a46bc218d36df49a7ade39f8ea51ac744" kindref="member">time_node::execution_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>mCallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>time_node_impl::trigger()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>TimeEvents<sp/>are<sp/>not<sp/>PENDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPendingEvents.size()<sp/>!=<sp/>timeEvents().size())</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>expression<sp/>observation<sp/>because<sp/>the<sp/>TimeNode<sp/>is<sp/>not<sp/>ready<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>observeExpressionResult(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>triggering<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>TimeEvents<sp/>will<sp/>happen<sp/>or<sp/>be<sp/>disposed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeEvent<sp/>:<sp/>mPendingEvents)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ev<sp/>=<sp/>*timeEvent;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>expr<sp/>=<sp/>ev.getExpression();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>any<sp/>Destination<sp/>value<sp/>into<sp/>the<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>expressions::update(expr);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expressions::evaluate(expr))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ev.happen();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ev.dispose();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>expression<sp/>observation<sp/>now<sp/>the<sp/>TimeNode<sp/>has<sp/>been<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>observeExpressionResult(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>notify<sp/>observers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCallback)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>(mCallback)();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>triggering<sp/>succeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>time_node_impl::getDate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>date<sp/>from<sp/>each<sp/>first<sp/>previous<sp/>time<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>zero<sp/>duration<sp/>time<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timeEvents().empty())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeEvent<sp/>:<sp/>timeEvents())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timeEvent-&gt;previousTimeConstraints().empty())</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeEvent-&gt;previousTimeConstraints()[0]-&gt;getDurationNominal()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Zero)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeEvent-&gt;previousTimeConstraints()[0]-&gt;getDurationNominal()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>timeEvent-&gt;previousTimeConstraints()[0]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getStartEvent()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getTimeNode()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;getDate();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Zero;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceossia_1a5b622aa7ca8d6e60ce91f567ec10b151" kindref="member">expression</ref>&amp;<sp/>time_node_impl::getExpression()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mExpression;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="classossia_1_1time__node" kindref="compound">time_node</ref>&amp;<sp/>time_node_impl::setExpression(expression_ptr<sp/>exp)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>assert(exp);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>mExpression<sp/>=<sp/>std::move(exp);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>time_node_impl::getSimultaneityMargin()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSimultaneityMargin;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="classossia_1_1time__node" kindref="compound">time_node</ref>&amp;<sp/>time_node_impl::setSimultaneityMargin(<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>simultaneityMargin)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>mSimultaneityMargin<sp/>=<sp/>simultaneityMargin;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">time_node_impl::iterator<sp/>time_node_impl::emplace(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>pos,<sp/><ref refid="classossia_1_1time__event_1a3a9a769fd9ee7e8cba1e8942cd0f252a" kindref="member">time_event::ExecutionCallback</ref><sp/>callback,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ossia::expression_ptr<sp/>exp)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeEvents().insert(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/>std::make_shared&lt;time_event_impl&gt;(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback,<sp/>shared_from_this(),<sp/>std::move(exp)));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1detail_1_1time__node__impl_1a1dde8381c2e8c162a017c430d9e23aae" kindref="member">time_node_impl::process</ref>(ptr_container&lt;time_event&gt;&amp;<sp/>statusChangedEvents)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>to<sp/>remember<sp/>which<sp/>event<sp/>changed<sp/>its<sp/>status<sp/>to<sp/>PENDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>it<sp/>is<sp/>needed<sp/>in<sp/>JamomaTimeNode::trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>mPendingEvents.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maximalDurationReached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeEvent<sp/>:<sp/>timeEvents())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_event_impl&gt;<sp/>e</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::dynamic_pointer_cast&lt;time_event_impl&gt;(timeEvent);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(timeEvent-&gt;getStatus())</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>NONE<sp/>TimeEvent<sp/>is<sp/>ready<sp/>to<sp/>become<sp/>PENDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>time_event::Status::NONE:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minimalDurationReached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeConstraint<sp/>:<sp/>timeEvent-&gt;previousTimeConstraints())</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>TimeConstraints<sp/>with<sp/>a<sp/>DISPOSED<sp/>start<sp/>event<sp/>are<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeConstraint-&gt;getStartEvent()-&gt;getStatus()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>time_event::Status::DISPOSED)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>TimeConstraint<sp/>with<sp/>a<sp/>none<sp/>HAPPENED<sp/>start<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>have<sp/>reached<sp/>its<sp/>minimal<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeConstraint-&gt;getStartEvent()-&gt;getStatus()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>time_event::Status::HAPPENED)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimalDurationReached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>TimeConstraint<sp/>which<sp/>doesn&apos;t<sp/>reached<sp/>its<sp/>minimal<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>to<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeConstraint-&gt;getDate()<sp/>&lt;<sp/>timeConstraint-&gt;getDurationMin())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimalDurationReached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>to<sp/>PENDING<sp/>status<sp/>once<sp/>all<sp/>previous<sp/>TimeConstraints<sp/>allow<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimalDurationReached)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;setStatus(time_event::Status::PENDING);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PENDING<sp/>TimeEvent<sp/>is<sp/>ready<sp/>for<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>time_event::Status::PENDING:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPendingEvents.push_back(timeEvent);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeConstraint<sp/>:<sp/>timeEvent-&gt;previousTimeConstraints())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeConstraint-&gt;getDate()<sp/>&gt;=<sp/>timeConstraint-&gt;getDurationMax())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximalDurationReached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HAPPENED<sp/>TimeEvent<sp/>propagates<sp/>recursively<sp/>the<sp/>execution<sp/>to<sp/>the<sp/>end<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>next<sp/>TimeConstraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>time_event::Status::HAPPENED:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeConstraint<sp/>:<sp/>timeEvent-&gt;nextTimeConstraints())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_node_impl&gt;<sp/>n</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::dynamic_pointer_cast&lt;time_node_impl&gt;(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeConstraint-&gt;getEndEvent()-&gt;getTimeNode());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;process(statusChangedEvents);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DISPOSED<sp/>TimeEvent<sp/>stops<sp/>the<sp/>propagation<sp/>of<sp/>the<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>time_event::Status::DISPOSED:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>TimeEvents<sp/>are<sp/>not<sp/>PENDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPendingEvents.size()<sp/>!=<sp/>timeEvents().size())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>false<sp/>expression<sp/>mute<sp/>TimeNode<sp/>triggering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mExpression<sp/>==<sp/>expressions::expression_false)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>one<sp/>TimeConstraint<sp/>over<sp/>its<sp/>maximal<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>expression<sp/>one<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>observe<sp/>and<sp/>evaluate<sp/>TimeNode&apos;s<sp/>expression<sp/>before<sp/>to<sp/>trig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>if<sp/>no<sp/>maximal<sp/>duration<sp/>have<sp/>been<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mExpression<sp/>!=<sp/>expressions::expression_true<sp/>&amp;&amp;<sp/>!maximalDurationReached)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isObservingExpression())</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expressions::update(*mExpression);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>observeExpressionResult(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!expressions::evaluate(*mExpression))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>the<sp/>time<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trigger())</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>former<sp/>PENDING<sp/>TimeEvents<sp/>are<sp/>now<sp/>HAPPENED<sp/>or<sp/>DISPOSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeEvent<sp/>:<sp/>mPendingEvents)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>statusChangedEvents.push_back(timeEvent);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>time_node_impl::isObservingExpression()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mObserveExpression;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_node_impl::observeExpressionResult(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>observe)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mExpression<sp/>||<sp/>*mExpression<sp/>==<sp/>expressions::expression_true</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>*mExpression<sp/>==<sp/>expressions::expression_false)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(observe<sp/>!=<sp/>mObserveExpression)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasObserving<sp/>=<sp/>mObserveExpression;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>mObserveExpression<sp/>=<sp/>observe;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mObserveExpression)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pull<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>expression<sp/>observation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResultCallbackIndex<sp/>=<sp/>expressions::add_callback(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mExpression,<sp/>[&amp;](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result)<sp/>{<sp/>resultCallback(result);<sp/>});</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCallbackSet<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>expression<sp/>observation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasObserving<sp/>&amp;&amp;<sp/>mCallbackSet)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expressions::remove_callback(*mExpression,<sp/>mResultCallbackIndex);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCallbackSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_node_impl::resultCallback(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/detail/TimeNode_impl.cpp"/>
  </compounddef>
</doxygen>
