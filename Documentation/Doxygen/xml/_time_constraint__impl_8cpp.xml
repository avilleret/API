<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_time_constraint__impl_8cpp" kind="file" language="C++">
    <compoundname>TimeConstraint_impl.cpp</compoundname>
    <includes refid="algorithms_8hpp" local="no">ossia/detail/algorithms.hpp</includes>
    <includes refid="_time_constraint__impl_8hpp" local="no">ossia/editor/scenario/detail/TimeConstraint_impl.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="5096">
        <label>list</label>
      </node>
      <node id="5115">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5124">
        <label>atomic</label>
      </node>
      <node id="5134">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="5135" relation="include">
        </childnode>
      </node>
      <node id="5087">
        <label>functional</label>
      </node>
      <node id="5098">
        <label>ossia/editor/scenario/time_process.hpp</label>
        <link refid="time__process_8hpp_source"/>
        <childnode refid="5099" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
      </node>
      <node id="5080">
        <label>iterator</label>
      </node>
      <node id="5137">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="5102" relation="include">
        </childnode>
      </node>
      <node id="5101">
        <label>ossia/editor/state/message.hpp</label>
        <link refid="message_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5106" relation="include">
        </childnode>
      </node>
      <node id="5150">
        <label>ossia/editor/scenario/detail/TimeProcess_impl.hpp</label>
        <link refid="_time_process__impl_8hpp_source"/>
        <childnode refid="5083" relation="include">
        </childnode>
      </node>
      <node id="5118">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5092" relation="include">
        </childnode>
      </node>
      <node id="5129">
        <label>TimeEvent_impl.hpp</label>
        <link refid="_time_event__impl_8hpp_source"/>
        <childnode refid="5130" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5147" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5081" relation="include">
        </childnode>
      </node>
      <node id="5123">
        <label>Clock_impl.hpp</label>
        <link refid="_clock__impl_8hpp_source"/>
        <childnode refid="5124" relation="include">
        </childnode>
        <childnode refid="5086" relation="include">
        </childnode>
        <childnode refid="5084" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5126" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
        <childnode refid="5128" relation="include">
        </childnode>
        <childnode refid="5082" relation="include">
        </childnode>
      </node>
      <node id="5097">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="5130">
        <label>ossia/editor/expression/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5141" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
        <childnode refid="5143" relation="include">
        </childnode>
        <childnode refid="5144" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
      </node>
      <node id="5084">
        <label>cmath</label>
      </node>
      <node id="5110">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="5111" relation="include">
        </childnode>
      </node>
      <node id="5076">
        <label>TimeConstraint_impl.cpp</label>
        <link refid="TimeConstraint_impl.cpp"/>
        <childnode refid="5077" relation="include">
        </childnode>
        <childnode refid="5081" relation="include">
        </childnode>
        <childnode refid="5151" relation="include">
        </childnode>
      </node>
      <node id="5090">
        <label>string</label>
      </node>
      <node id="5145">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="5095" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
        <childnode refid="5140" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5085">
        <label>ossia_export.h</label>
      </node>
      <node id="5131">
        <label>ossia/editor/expression/expression_atom.hpp</label>
        <link refid="expression__atom_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5132">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="5095" relation="include">
        </childnode>
        <childnode refid="5110" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5133" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5140" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5083">
        <label>ossia/editor/scenario/time_value.hpp</label>
        <link refid="time__value_8hpp_source"/>
        <childnode refid="5084" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5119">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="5120" relation="include">
        </childnode>
      </node>
      <node id="5144">
        <label>ossia/editor/expression/expression_pulse.hpp</label>
        <link refid="expression__pulse_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
        <childnode refid="5145" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5117">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
      </node>
      <node id="5127">
        <label>ratio</label>
      </node>
      <node id="5103">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5107" relation="include">
        </childnode>
        <childnode refid="5108" relation="include">
        </childnode>
        <childnode refid="5109" relation="include">
        </childnode>
        <childnode refid="5114" relation="include">
        </childnode>
        <childnode refid="5115" relation="include">
        </childnode>
        <childnode refid="5116" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5119" relation="include">
        </childnode>
      </node>
      <node id="5095">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="5096" relation="include">
        </childnode>
      </node>
      <node id="5107">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5133">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="5134" relation="include">
        </childnode>
        <childnode refid="5135" relation="include">
        </childnode>
      </node>
      <node id="5138">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="5112">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="5125">
        <label>ctime</label>
      </node>
      <node id="5092">
        <label>vector</label>
      </node>
      <node id="5147">
        <label>Scenario_impl.hpp</label>
        <link refid="_scenario__impl_8hpp_source"/>
        <childnode refid="5148" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5147" relation="include">
        </childnode>
        <childnode refid="5129" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5081" relation="include">
        </childnode>
        <childnode refid="5150" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
        <childnode refid="5106" relation="include">
        </childnode>
      </node>
      <node id="5082">
        <label>ossia/editor/scenario/clock.hpp</label>
        <link refid="clock_8hpp_source"/>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5086" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5136">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="5084" relation="include">
        </childnode>
      </node>
      <node id="5108">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5106">
        <label>utility</label>
      </node>
      <node id="5091">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5092" relation="include">
        </childnode>
      </node>
      <node id="5120">
        <label>array</label>
      </node>
      <node id="5109">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="5110" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5092" relation="include">
        </childnode>
      </node>
      <node id="5140">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="5089">
        <label>ossia/editor/scenario/time_constraint.hpp</label>
        <link refid="time__constraint_8hpp_source"/>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5116">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5114">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5093">
        <label>ossia/editor/scenario/time_event.hpp</label>
        <link refid="time__event_8hpp_source"/>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5105">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5106" relation="include">
        </childnode>
      </node>
      <node id="5122">
        <label>ossia/editor/state/state_element_fwd.hpp</label>
        <link refid="state__element__fwd_8hpp_source"/>
        <childnode refid="5097" relation="include">
        </childnode>
      </node>
      <node id="5149">
        <label>TimeNode_impl.hpp</label>
        <link refid="_time_node__impl_8hpp_source"/>
        <childnode refid="5130" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
      </node>
      <node id="5151">
        <label>iostream</label>
      </node>
      <node id="5121">
        <label>ossia/editor/state/state.hpp</label>
        <link refid="state_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5102">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="5103" relation="include">
        </childnode>
        <childnode refid="5097" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5143">
        <label>ossia/editor/expression/expression_not.hpp</label>
        <link refid="expression__not_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5148">
        <label>ossia/editor/scenario/scenario.hpp</label>
        <link refid="scenario_8hpp_source"/>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5094">
        <label>ossia/editor/expression/expression_fwd.hpp</label>
        <link refid="expression__fwd_8hpp_source"/>
        <childnode refid="5095" relation="include">
        </childnode>
        <childnode refid="5097" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5099">
        <label>ossia/editor/state/state_element.hpp</label>
        <link refid="state__element_8hpp_source"/>
        <childnode refid="5100" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5126">
        <label>mutex</label>
      </node>
      <node id="5086">
        <label>chrono</label>
      </node>
      <node id="5135">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="5136" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5138" relation="include">
        </childnode>
        <childnode refid="5139" relation="include">
        </childnode>
        <childnode refid="5079" relation="include">
        </childnode>
      </node>
      <node id="5139">
        <label>boost/optional.hpp</label>
      </node>
      <node id="5128">
        <label>thread</label>
      </node>
      <node id="5079">
        <label>type_traits</label>
      </node>
      <node id="5104">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="5105" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5078">
        <label>algorithm</label>
      </node>
      <node id="5141">
        <label>ossia/editor/expression/expression_bool.hpp</label>
        <link refid="expression__bool_8hpp_source"/>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5111">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="5077">
        <label>ossia/detail/algorithms.hpp</label>
        <link refid="algorithms_8hpp_source"/>
        <childnode refid="5078" relation="include">
        </childnode>
        <childnode refid="5079" relation="include">
        </childnode>
        <childnode refid="5080" relation="include">
        </childnode>
      </node>
      <node id="5142">
        <label>ossia/editor/expression/expression_composition.hpp</label>
        <link refid="expression__composition_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5088">
        <label>memory</label>
      </node>
      <node id="5113">
        <label>initializer_list</label>
      </node>
      <node id="5100">
        <label>ossia/editor/state/custom_state.hpp</label>
        <link refid="custom__state_8hpp_source"/>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5146">
        <label>ossia/editor/scenario/time_node.hpp</label>
        <link refid="time__node_8hpp_source"/>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
      </node>
      <node id="5081">
        <label>ossia/editor/scenario/detail/TimeConstraint_impl.hpp</label>
        <link refid="_time_constraint__impl_8hpp_source"/>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5129" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5081" relation="include">
        </childnode>
        <childnode refid="5150" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1detail">ossia::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ossia/detail/algorithms.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/editor/scenario/detail/TimeConstraint_impl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal">time_constraint_impl::time_constraint_impl(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1time__constraint_1a85fc6a7102dcada7c0589a0aa4b72e94" kindref="member">time_constraint::ExecutionCallback</ref><sp/>callback,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_event&gt;<sp/>startEvent,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_event&gt;<sp/>endEvent,<sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>nominal,<sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>min,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>max)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>clock_impl([=](<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>t,<sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>t2,<sp/>unsigned<sp/>char<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClockCallback(t,<sp/>t2,<sp/>c);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mCallback(callback)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mStartEvent(startEvent)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mEndEvent(endEvent)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDurationNominal(nominal)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDurationMin(min)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDurationMax(max)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>clock_impl::setDuration(mDurationNominal);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">time_constraint_impl::~time_constraint_impl()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::start()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRunning)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;time<sp/>constraint<sp/>is<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>clock<sp/>duration<sp/>using<sp/>maximal<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>setDuration(mDurationMax);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>all<sp/>jamoma<sp/>time<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>timeProcesses())</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess-&gt;start();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>launch<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>do_start();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::stop()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>do_stop();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>all<sp/>jamoma<sp/>time<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>timeProcesses())</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess-&gt;stop();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classossia_1_1state" kindref="compound">ossia::state</ref><sp/>time_constraint_impl::offset(<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>date)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRunning)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;time<sp/>constraint<sp/>is<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>do_setOffset(date);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>processes<sp/>=<sp/>timeProcesses();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1state" kindref="compound">ossia::state</ref><sp/><ref refid="classossia_1_1state" kindref="compound">state</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>state.reserve(processes.size());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>state<sp/>of<sp/>each<sp/>TimeProcess<sp/>at<sp/>current<sp/>clock<sp/>position<sp/>and<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>processes)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>state.add(timeProcess-&gt;offset(date));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="classossia_1_1state" kindref="compound">ossia::state</ref><sp/>time_constraint_impl::state()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mRunning)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;time<sp/>constraint<sp/>is<sp/>not<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>processes<sp/>=<sp/>timeProcesses();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1state" kindref="compound">ossia::state</ref><sp/>state;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>state.reserve(processes.size());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>state<sp/>of<sp/>each<sp/>TimeProcess<sp/>at<sp/>current<sp/>clock<sp/>position<sp/>and<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>processes)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>state.add(timeProcess-&gt;state());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::pause()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>mPaused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pause<sp/>all<sp/>jamoma<sp/>time<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>timeProcesses())</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess-&gt;pause();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::resume()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>mPaused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>time<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>mLastTime<sp/>=<sp/>clock_type::now();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resume<sp/>all<sp/>jamoma<sp/>time<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>timeProcess<sp/>:<sp/>timeProcesses())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess-&gt;resume();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::setCallback(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1time__constraint_1a85fc6a7102dcada7c0589a0aa4b72e94" kindref="member">time_constraint::ExecutionCallback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>mCallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref>&amp;<sp/>time_constraint_impl::getDurationNominal()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDurationNominal;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref>&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">time_constraint_impl::setDurationNominal(<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>durationNominal)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>mDurationNominal<sp/>=<sp/>durationNominal;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDurationNominal<sp/>&lt;<sp/>mDurationMin)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>setDurationMin(mDurationNominal);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDurationNominal<sp/>&gt;<sp/>mDurationMax)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>setDurationMax(mDurationNominal);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>clock_impl::setDuration(mDurationNominal);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref>&amp;<sp/>time_constraint_impl::getDurationMin()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDurationMin;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref>&amp;<sp/>time_constraint_impl::setDurationMin(<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>durationMin)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>mDurationMin<sp/>=<sp/>durationMin;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDurationMin<sp/>&gt;<sp/>mDurationNominal)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>setDurationNominal(mDurationMin);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref>&amp;<sp/>time_constraint_impl::getDurationMax()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDurationMax;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref>&amp;<sp/>time_constraint_impl::setDurationMax(<ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>durationMax)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>mDurationMax<sp/>=<sp/>durationMax;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(durationMax<sp/>&lt;<sp/>mDurationNominal)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>setDurationNominal(mDurationMax);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;time_event&gt;&amp;<sp/>time_constraint_impl::getStartEvent()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="182"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStartEvent;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;time_event&gt;&amp;<sp/>time_constraint_impl::getEndEvent()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEndEvent;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::addTimeProcess(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_process&gt;<sp/>timeProcess)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>assert(timeProcess.get());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>a<sp/>TimeProcess<sp/>if<sp/>it<sp/>is<sp/>not<sp/>already<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find(timeProcesses().begin(),<sp/>timeProcesses().end(),<sp/>timeProcess)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>timeProcesses().end())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcesses().push_back(timeProcess);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess-&gt;parent<sp/>=<sp/>shared_from_this();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::removeTimeProcess(</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;time_process&gt;<sp/>timeProcess)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>find(timeProcesses().begin(),<sp/>timeProcesses().end(),<sp/>timeProcess);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>timeProcesses().end())</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcesses().erase(it);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>timeProcess.reset();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_constraint_impl::ClockCallback(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>position,<sp/><ref refid="classossia_1_1time__value" kindref="compound">time_value</ref><sp/>date,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>droppedTicks)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCallback)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>(mCallback)(position,<sp/>date,<sp/>state());</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/detail/TimeConstraint_impl.cpp"/>
  </compounddef>
</doxygen>
