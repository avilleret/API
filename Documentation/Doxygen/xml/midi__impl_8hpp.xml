<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="midi__impl_8hpp" kind="file" language="C++">
    <compoundname>midi_impl.hpp</compoundname>
    <includes refid="value_8hpp" local="no">ossia/editor/value/value.hpp</includes>
    <includes refid="domain_8hpp" local="no">ossia/network/domain/domain.hpp</includes>
    <includes refid="channel_8hpp" local="no">ossia/network/midi/detail/channel.hpp</includes>
    <includes refid="midi__address_8hpp" local="no">ossia/network/midi/midi_address.hpp</includes>
    <includes refid="midi__device_8hpp" local="no">ossia/network/midi/midi_device.hpp</includes>
    <includes refid="midi__node_8hpp" local="no">ossia/network/midi/midi_node.hpp</includes>
    <includes local="no">iostream</includes>
    <includedby refid="midi__device_8cpp" local="no">midi_device.cpp</includedby>
    <includedby refid="midi__protocol_8cpp" local="no">midi_protocol.cpp</includedby>
    <includedby refid="midi__protocol_8hpp" local="no">midi_protocol.hpp</includedby>
    <incdepgraph>
      <node id="3149">
        <label>list</label>
      </node>
      <node id="3127">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3136">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="3137" relation="include">
        </childnode>
      </node>
      <node id="3150">
        <label>functional</label>
      </node>
      <node id="3140">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="3111" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3146">
        <label>ossia/network/midi/midi_address.hpp</label>
        <link refid="midi__address_8hpp_source"/>
        <childnode refid="3147" relation="include">
        </childnode>
        <childnode refid="3144" relation="include">
        </childnode>
      </node>
      <node id="3134">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="3139">
        <label>cmath</label>
      </node>
      <node id="3121">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="3122" relation="include">
        </childnode>
      </node>
      <node id="3130">
        <label>string</label>
      </node>
      <node id="3110">
        <label>midi_impl.hpp</label>
        <link refid="midi_impl.hpp"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3144" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3152" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
      </node>
      <node id="3154">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3115">
        <label>ossia_export.h</label>
      </node>
      <node id="3145">
        <label>cinttypes</label>
      </node>
      <node id="3147">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3152">
        <label>ossia/network/midi/midi_device.hpp</label>
        <link refid="midi__device_8hpp_source"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
      </node>
      <node id="3132">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
      </node>
      <node id="3144">
        <label>ossia/network/midi/detail/channel.hpp</label>
        <link refid="channel_8hpp_source"/>
        <childnode refid="3133" relation="include">
        </childnode>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
      <node id="3112">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="3113" relation="include">
        </childnode>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
      </node>
      <node id="3148">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="3149" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3135">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3137" relation="include">
        </childnode>
      </node>
      <node id="3141">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="3123">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="3125">
        <label>vector</label>
      </node>
      <node id="3138">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="3139" relation="include">
        </childnode>
      </node>
      <node id="3119">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3155">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>utility</label>
      </node>
      <node id="3133">
        <label>array</label>
      </node>
      <node id="3120">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3151">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="3128">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3126">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
      <node id="3157">
        <label>iostream</label>
      </node>
      <node id="3153">
        <label>ossia/network/base/device.hpp</label>
        <link refid="device_8hpp_source"/>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3111">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3137">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3140" relation="include">
        </childnode>
        <childnode refid="3141" relation="include">
        </childnode>
        <childnode refid="3142" relation="include">
        </childnode>
        <childnode refid="3143" relation="include">
        </childnode>
      </node>
      <node id="3142">
        <label>boost/optional.hpp</label>
      </node>
      <node id="3156">
        <label>ossia/network/midi/midi_node.hpp</label>
        <link refid="midi__node_8hpp_source"/>
        <childnode refid="3154" relation="include">
        </childnode>
      </node>
      <node id="3143">
        <label>type_traits</label>
      </node>
      <node id="3113">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3122">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="3117">
        <label>memory</label>
      </node>
      <node id="3124">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3158">
        <label>midi_impl.hpp</label>
        <link refid="midi_impl.hpp"/>
        <childnode refid="3159" relation="include">
        </childnode>
      </node>
      <node id="3160">
        <label>midi.hpp</label>
        <link refid="midi_8hpp_source"/>
      </node>
      <node id="3159">
        <label>midi_protocol.hpp</label>
        <link refid="midi__protocol_8hpp_source"/>
        <childnode refid="3160" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classossia_1_1net_1_1midi_1_1note__on___n__node" prot="public">ossia::net::midi::note_on_N_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1note__off___n__node" prot="public">ossia::net::midi::note_off_N_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1control___n__node" prot="public">ossia::net::midi::control_N_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1program___n__node" prot="public">ossia::net::midi::program_N_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1program__node" prot="public">ossia::net::midi::program_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1note__on__node" prot="public">ossia::net::midi::note_on_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1note__off__node" prot="public">ossia::net::midi::note_off_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1control__node" prot="public">ossia::net::midi::control_node</innerclass>
    <innerclass refid="classossia_1_1net_1_1midi_1_1channel__node" prot="public">ossia::net::midi::channel_node</innerclass>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1net">ossia::net</innernamespace>
    <innernamespace refid="namespaceossia_1_1net_1_1midi">ossia::net::midi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/editor/value/value.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/domain/domain.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/midi/detail/channel.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/midi/midi_address.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/midi/midi_device.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/midi/midi_node.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">midi</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18" refid="classossia_1_1net_1_1midi_1_1note__on___n__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1note__on___n__node" kindref="compound">note_on_N_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1note__on___n__node" kindref="compound">note_on_N_node</ref>(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>midi_size_t<sp/>note,<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice,<sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>aParent)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>{aDevice,<sp/>aParent},<sp/>mName{std::to_string(note)}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel,<sp/>midi_size_t<sp/>note)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::NoteOn_N,<sp/>note},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classossia_1_1net_1_1midi_1_1note__off___n__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1note__off___n__node" kindref="compound">note_off_N_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1note__off___n__node" kindref="compound">note_off_N_node</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>midi_size_t<sp/>note,<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice,<sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>aParent)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>{aDevice,<sp/>aParent},<sp/>mName{std::to_string(note)}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel,<sp/>midi_size_t<sp/>note)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::NoteOff_N,<sp/>note},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classossia_1_1net_1_1midi_1_1control___n__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1control___n__node" kindref="compound">control_N_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1control___n__node" kindref="compound">control_N_node</ref>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>midi_size_t<sp/>param,<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice,<sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>aParent)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>{aDevice,<sp/>aParent},<sp/>mName{std::to_string(param)}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel,<sp/>midi_size_t<sp/>param)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::CC_N,<sp/>param},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classossia_1_1net_1_1midi_1_1program___n__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1program___n__node" kindref="compound">program_N_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1program___n__node" kindref="compound">program_N_node</ref>(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>midi_size_t<sp/>param,<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice,<sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>aParent)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>{aDevice,<sp/>aParent},<sp/>mName{std::to_string(param)}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel,<sp/>midi_size_t<sp/>param)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::PC_N,<sp/>param},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classossia_1_1net_1_1midi_1_1program__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1program__node" kindref="compound">program_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1program__node" kindref="compound">program_node</ref>(<ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice)<sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>(aDevice,<sp/>aDevice)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;program&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::PC,<sp/>0},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>127;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::make_unique&lt;program_N_node&gt;(i,<sp/>mDevice,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;init(channel,<sp/>i);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(ptr));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classossia_1_1net_1_1midi_1_1note__on__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1note__on__node" kindref="compound">note_on_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1note__on__node" kindref="compound">note_on_node</ref>(<ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice)<sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>(aDevice,<sp/>aDevice)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::NoteOn,<sp/>0},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>127;<sp/>i++)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::make_unique&lt;note_on_N_node&gt;(i,<sp/>mDevice,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;init(channel,<sp/>i);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(ptr));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classossia_1_1net_1_1midi_1_1note__off__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1note__off__node" kindref="compound">note_off_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1note__off__node" kindref="compound">note_off_node</ref>(<ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice)<sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>(aDevice,<sp/>aDevice)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;off&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::NoteOff,<sp/>0},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>127;<sp/>i++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::make_unique&lt;note_off_N_node&gt;(i,<sp/>mDevice,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;init(channel,<sp/>i);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(ptr));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classossia_1_1net_1_1midi_1_1control__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1control__node" kindref="compound">control_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1control__node" kindref="compound">control_node</ref>(<ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice)<sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>(aDevice,<sp/>aDevice)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;control&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(midi_size_t<sp/>channel)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>mAddress<sp/>=<sp/>std::make_unique&lt;midi_address&gt;(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structossia_1_1net_1_1midi_1_1address__info" kindref="compound">address_info</ref>{channel,<sp/>address_info::Type::CC,<sp/>0},<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>127;<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::make_unique&lt;control_N_node&gt;(i,<sp/>mDevice,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;init(channel,<sp/>i);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(ptr));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classossia_1_1net_1_1midi_1_1channel__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classossia_1_1net_1_1midi_1_1channel__node" kindref="compound">channel_node</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>midi_size_t<sp/>mChannel;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1midi_1_1channel__node" kindref="compound">channel_node</ref>(midi_size_t<sp/>channel,<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__device" kindref="compound">midi_device</ref>&amp;<sp/>aDevice)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classossia_1_1net_1_1midi_1_1midi__node" kindref="compound">midi_node</ref>(aDevice,<sp/>aDevice)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mChannel{channel}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mName(std::to_string(channel))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>non<sp/>=<sp/>std::make_unique&lt;note_on_node&gt;(mDevice);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>non-&gt;init(mChannel);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(non));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>noff<sp/>=<sp/>std::make_unique&lt;note_off_node&gt;(mDevice);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noff-&gt;init(mChannel);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(noff));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>std::make_unique&lt;control_node&gt;(mDevice);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cc-&gt;init(mChannel);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(cc));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pc<sp/>=<sp/>std::make_unique&lt;program_node&gt;(mDevice);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pc-&gt;init(mChannel);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mChildren.push_back(std::move(pc));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/network/midi/detail/midi_impl.hpp"/>
  </compounddef>
</doxygen>
