<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="string__view_8hpp" kind="file" language="C++">
    <compoundname>string_view.hpp</compoundname>
    <includes local="no">boost/utility/string_ref.hpp</includes>
    <includes local="no">functional</includes>
    <includes local="no">oscpack/osc/SmallString.h</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="message__generator_8hpp" local="no">message_generator.hpp</includedby>
    <includedby refid="detail_2osc_8hpp" local="no">osc.hpp</includedby>
    <incdepgraph>
      <node id="4717">
        <label>functional</label>
      </node>
      <node id="4718">
        <label>oscpack/osc/SmallString.h</label>
      </node>
      <node id="4715">
        <label>string_view.hpp</label>
        <link refid="string_view.hpp"/>
        <childnode refid="4716" relation="include">
        </childnode>
        <childnode refid="4717" relation="include">
        </childnode>
        <childnode refid="4718" relation="include">
        </childnode>
        <childnode refid="4719" relation="include">
        </childnode>
      </node>
      <node id="4716">
        <label>boost/utility/string_ref.hpp</label>
      </node>
      <node id="4719">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4727">
        <label>osc.hpp</label>
        <link refid="osc_8hpp_source"/>
        <childnode refid="4725" relation="include">
        </childnode>
      </node>
      <node id="4720">
        <label>string_view.hpp</label>
        <link refid="string_view.hpp"/>
        <childnode refid="4721" relation="include">
        </childnode>
        <childnode refid="4728" relation="include">
        </childnode>
      </node>
      <node id="4725">
        <label>network.hpp</label>
        <link refid="network_8hpp_source"/>
        <childnode refid="4726" relation="include">
        </childnode>
      </node>
      <node id="4724">
        <label>minuit_parser.hpp</label>
        <link refid="minuit__parser_8hpp_source"/>
      </node>
      <node id="4721">
        <label>message_generator.hpp</label>
        <link refid="message__generator_8hpp_source"/>
        <childnode refid="4722" relation="include">
        </childnode>
      </node>
      <node id="4726">
        <label>ossia.hpp</label>
        <link refid="ossia_8hpp_source"/>
      </node>
      <node id="4723">
        <label>minuit.hpp</label>
        <link refid="minuit_8hpp_source"/>
        <childnode refid="4724" relation="include">
        </childnode>
        <childnode refid="4725" relation="include">
        </childnode>
      </node>
      <node id="4728">
        <label>osc.hpp</label>
        <link refid="detail_2osc_8hpp_source"/>
        <childnode refid="4724" relation="include">
        </childnode>
      </node>
      <node id="4722">
        <label>sender.hpp</label>
        <link refid="sender_8hpp_source"/>
        <childnode refid="4723" relation="include">
        </childnode>
        <childnode refid="4727" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdetail_1_1param__traits" prot="public">detail::param_traits</innerclass>
    <innerclass refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01scde0d525df0d96b6aec7f29ce55192dd" prot="public">detail::param_traits&lt; T, std::enable_if_t&lt; std::is_same&lt; T, std::string &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01bcf93b389a4d5be0f151cf5f62b9fb64c" prot="public">detail::param_traits&lt; T, std::enable_if_t&lt; std::is_same&lt; T, boost::string_ref &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01o0f30768c646fbcda17e384a6b877cdd0" prot="public">detail::param_traits&lt; T, std::enable_if_t&lt; std::is_same&lt; T, oscpack::small_string &gt;::value &gt; &gt;</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/string_ref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;oscpack/osc/SmallString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>string_view<sp/>=<sp/>boost::string_ref;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>string_view<sp/>=<sp/>std::string;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="12" refid="structdetail_1_1param__traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1param__traits" kindref="compound">param_traits</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="17" refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01scde0d525df0d96b6aec7f29ce55192dd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1param__traits" kindref="compound">param_traits</ref>&lt;T,<sp/>std::enable_if_t&lt;std::is_same&lt;T,<sp/>std::string&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01bcf93b389a4d5be0f151cf5f62b9fb64c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1param__traits" kindref="compound">param_traits</ref>&lt;T,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;std::is_same&lt;T,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::string_ref&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31" refid="structdetail_1_1param__traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01_t_00_01o0f30768c646fbcda17e384a6b877cdd0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1param__traits" kindref="compound">param_traits</ref>&lt;T,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;std::is_same&lt;T,<sp/>oscpack::small_string&gt;::</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value&gt;&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>param_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1param__traits" kindref="compound">param_traits&lt;T&gt;::type</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/network/osc/detail/string_view.hpp"/>
  </compounddef>
</doxygen>
