<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="device_8hpp" kind="file" language="C++">
    <compoundname>device.hpp</compoundname>
    <includes refid="node_8hpp" local="no">ossia/network/base/node.hpp</includes>
    <includes local="no">nano_signal_slot.hpp</includes>
    <includes local="no">ossia_export.h</includes>
    <includedby refid="device_8cpp" local="no">device.cpp</includedby>
    <includedby refid="node_8cpp" local="no">node.cpp</includedby>
    <includedby refid="generic__device_8hpp" local="no">generic_device.hpp</includedby>
    <includedby refid="midi__device_8hpp" local="no">midi_device.hpp</includedby>
    <includedby refid="midi__protocol_8hpp" local="no">midi_protocol.hpp</includedby>
    <incdepgraph>
      <node id="961">
        <label>list</label>
      </node>
      <node id="966">
        <label>functional</label>
      </node>
      <node id="967">
        <label>string</label>
      </node>
      <node id="959">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
      </node>
      <node id="969">
        <label>ossia_export.h</label>
      </node>
      <node id="960">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="961" relation="include">
        </childnode>
      </node>
      <node id="965">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="964">
        <label>vector</label>
      </node>
      <node id="962">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
      </node>
      <node id="968">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="958">
        <label>device.hpp</label>
        <link refid="device.hpp"/>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
      </node>
      <node id="963">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="971">
        <label>generic_device.hpp</label>
        <link refid="generic__device_8hpp_source"/>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
      </node>
      <node id="974">
        <label>network.hpp</label>
        <link refid="network_8hpp_source"/>
        <childnode refid="975" relation="include">
        </childnode>
      </node>
      <node id="978">
        <label>midi_impl.hpp</label>
        <link refid="midi__impl_8hpp_source"/>
        <childnode refid="979" relation="include">
        </childnode>
      </node>
      <node id="977">
        <label>midi_device.hpp</label>
        <link refid="midi__device_8hpp_source"/>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="973">
        <label>minuit_parser.hpp</label>
        <link refid="minuit__parser_8hpp_source"/>
      </node>
      <node id="972">
        <label>generic_address.hpp</label>
        <link refid="generic__address_8hpp_source"/>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
      </node>
      <node id="975">
        <label>ossia.hpp</label>
        <link refid="ossia_8hpp_source"/>
      </node>
      <node id="970">
        <label>device.hpp</label>
        <link refid="device.hpp"/>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
      </node>
      <node id="976">
        <label>osc.hpp</label>
        <link refid="detail_2osc_8hpp_source"/>
        <childnode refid="973" relation="include">
        </childnode>
      </node>
      <node id="980">
        <label>midi.hpp</label>
        <link refid="midi_8hpp_source"/>
      </node>
      <node id="979">
        <label>midi_protocol.hpp</label>
        <link refid="midi__protocol_8hpp_source"/>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classossia_1_1net_1_1device__base" prot="public">ossia::net::device_base</innerclass>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1net">ossia::net</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/base/node.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nano_signal_slot.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">protocol_base;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classossia_1_1net_1_1device__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OSSIA_EXPORT<sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>(std::unique_ptr&lt;ossia::net::protocol_base&gt;<sp/>proto);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>(<ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;<sp/>operator=(<ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1protocol__base" kindref="compound">ossia::net::protocol_base</ref>&amp;<sp/>getProtocol()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classossia_1_1net_1_1device__base" kindref="compound">device_base</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>getRootNode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>getRootNode()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>getRootNode().setName(str);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getRootNode().getName();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>Nano::Signal&lt;void(const<sp/>node_base&amp;)&gt;<sp/>onNodeCreated;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>node<sp/>being<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>Nano::Signal&lt;void(const<sp/>node_base&amp;)&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onNodeRemoving;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>node<sp/>being<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>Nano::Signal&lt;void(const<sp/>node_base&amp;,<sp/>std::string)&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onNodeRenamed;<sp/></highlight><highlight class="comment">//<sp/>Node<sp/>has<sp/>the<sp/>new<sp/>name,<sp/>second<sp/>argument<sp/>is<sp/>the<sp/>old<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>Nano::Signal&lt;void(const<sp/>address_base&amp;)&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onAddressCreated;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>address<sp/>being<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>Nano::Signal&lt;void(const<sp/>address_base&amp;)&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onAddressRemoving;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>node<sp/>whose<sp/>address<sp/>was<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ossia::net::protocol_base&gt;<sp/>mProtocol;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/network/base/device.hpp"/>
  </compounddef>
</doxygen>
