<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_mapper__impl_8cpp" kind="file" language="C++">
    <compoundname>Mapper_impl.cpp</compoundname>
    <includes refid="_mapper__impl_8hpp" local="yes">Mapper_impl.hpp</includes>
    <includes refid="_curve__impl_8hpp" local="no">ossia/editor/curve/detail/Curve_impl.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2612">
        <label>list</label>
      </node>
      <node id="2667">
        <label>ossia/editor/curve/detail/Curve_impl.hpp</label>
        <link refid="_curve__impl_8hpp_source"/>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
      </node>
      <node id="2632">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2650">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="2651" relation="include">
        </childnode>
      </node>
      <node id="2609">
        <label>functional</label>
      </node>
      <node id="2617">
        <label>ossia/editor/scenario/time_process.hpp</label>
        <link refid="time__process_8hpp_source"/>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
      </node>
      <node id="2653">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="2621" relation="include">
        </childnode>
      </node>
      <node id="2620">
        <label>ossia/editor/state/message.hpp</label>
        <link refid="message_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
      </node>
      <node id="2664">
        <label>ossia/editor/scenario/detail/TimeProcess_impl.hpp</label>
        <link refid="_time_process__impl_8hpp_source"/>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2636">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
      </node>
      <node id="2639">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="2644">
        <label>ossia/editor/expression/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
      </node>
      <node id="2615">
        <label>cmath</label>
      </node>
      <node id="2627">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="2628" relation="include">
        </childnode>
      </node>
      <node id="2635">
        <label>string</label>
      </node>
      <node id="2611">
        <label>ossia/editor/mapper/mapper.hpp</label>
        <link refid="mapper_8hpp_source"/>
        <childnode refid="2612" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2599">
        <label>Mapper_impl.cpp</label>
        <link refid="Mapper_impl.cpp"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
      </node>
      <node id="2662">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2606">
        <label>ossia_export.h</label>
      </node>
      <node id="2610">
        <label>map</label>
      </node>
      <node id="2645">
        <label>ossia/editor/expression/expression_atom.hpp</label>
        <link refid="expression__atom_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2648">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2614">
        <label>ossia/editor/scenario/time_value.hpp</label>
        <link refid="time__value_8hpp_source"/>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2637">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="2638" relation="include">
        </childnode>
      </node>
      <node id="2661">
        <label>ossia/editor/expression/expression_pulse.hpp</label>
        <link refid="expression__pulse_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2634">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
      </node>
      <node id="2622">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2631" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
      </node>
      <node id="2647">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="2612" relation="include">
        </childnode>
      </node>
      <node id="2624">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2649">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2651" relation="include">
        </childnode>
      </node>
      <node id="2600">
        <label>Mapper_impl.hpp</label>
        <link refid="_mapper__impl_8hpp_source"/>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2611" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
      </node>
      <node id="2654">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="2629">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="2608">
        <label>ossia/editor/curve/curve_segment.hpp</label>
        <link refid="curve__segment_8hpp_source"/>
        <childnode refid="2609" relation="include">
        </childnode>
      </node>
      <node id="2604">
        <label>vector</label>
      </node>
      <node id="2613">
        <label>ossia/editor/scenario/clock.hpp</label>
        <link refid="clock_8hpp_source"/>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2652">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="2615" relation="include">
        </childnode>
      </node>
      <node id="2625">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2607">
        <label>utility</label>
      </node>
      <node id="2602">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
      </node>
      <node id="2638">
        <label>array</label>
      </node>
      <node id="2626">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
      </node>
      <node id="2657">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="2642">
        <label>ossia/editor/scenario/time_constraint.hpp</label>
        <link refid="time__constraint_8hpp_source"/>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2633">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2631">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2663">
        <label>ossia/editor/scenario/time_event.hpp</label>
        <link refid="time__event_8hpp_source"/>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2605">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
      </node>
      <node id="2641">
        <label>ossia/editor/state/state_element_fwd.hpp</label>
        <link refid="state__element__fwd_8hpp_source"/>
        <childnode refid="2639" relation="include">
        </childnode>
      </node>
      <node id="2669">
        <label>iostream</label>
      </node>
      <node id="2640">
        <label>ossia/editor/state/state.hpp</label>
        <link refid="state_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2621">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2601">
        <label>ossia/editor/curve/curve.hpp</label>
        <link refid="curve_8hpp_source"/>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
      </node>
      <node id="2660">
        <label>ossia/editor/expression/expression_not.hpp</label>
        <link refid="expression__not_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2646">
        <label>ossia/editor/expression/expression_fwd.hpp</label>
        <link refid="expression__fwd_8hpp_source"/>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2618">
        <label>ossia/editor/state/state_element.hpp</label>
        <link refid="state__element_8hpp_source"/>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2665">
        <label>mutex</label>
      </node>
      <node id="2668">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="2616">
        <label>chrono</label>
      </node>
      <node id="2651">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="2652" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2655">
        <label>boost/optional.hpp</label>
      </node>
      <node id="2666">
        <label>thread</label>
      </node>
      <node id="2656">
        <label>type_traits</label>
      </node>
      <node id="2623">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2658">
        <label>ossia/editor/expression/expression_bool.hpp</label>
        <link refid="expression__bool_8hpp_source"/>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2628">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="2659">
        <label>ossia/editor/expression/expression_composition.hpp</label>
        <link refid="expression__composition_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2603">
        <label>memory</label>
      </node>
      <node id="2630">
        <label>initializer_list</label>
      </node>
      <node id="2619">
        <label>ossia/editor/state/custom_state.hpp</label>
        <link refid="custom__state_8hpp_source"/>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2643">
        <label>ossia/editor/scenario/time_node.hpp</label>
        <link refid="time__node_8hpp_source"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2644" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1detail">ossia::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Mapper_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/editor/curve/detail/Curve_impl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal">mapper_impl::mapper_impl(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>driverAddress,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>drivenAddress,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>drive)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>time_process_impl()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDriverAddress{driverAddress}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDrivenAddress{drivenAddress}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDrive{drive}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mLastMessage{mDrivenAddress,<sp/>{}}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mDriverValueObserved(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">mapper_impl::~mapper_impl()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="namespaceossia_1ac2fcaa5e0ff809d85f9d4f43520f2f39" kindref="member">ossia::state_element</ref><sp/>mapper_impl::offset(<ref refid="classossia_1_1time__value" kindref="compound">ossia::time_value</ref><sp/><ref refid="classossia_1_1time__process_1a92c95de9f0ccb5bc02dec36876797d50" kindref="member">offset</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent-&gt;getRunning())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;parent<sp/>time<sp/>constraint<sp/>is<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>why<sp/>not<sp/>state<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="namespaceossia_1ac2fcaa5e0ff809d85f9d4f43520f2f39" kindref="member">ossia::state_element</ref><sp/>mapper_impl::state()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>par<sp/>=<sp/>*parent;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!par.getRunning())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;parent<sp/>time<sp/>constraint<sp/>is<sp/>not<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>date<sp/>hasn&apos;t<sp/>been<sp/>processed<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1time__value" kindref="compound">ossia::time_value</ref><sp/>date<sp/>=<sp/>par.getDate();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(date<sp/>!=<sp/>mLastDate)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>mLastDate<sp/>=<sp/>date;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mValueToMapMutex);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mValueToMap.valid())</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edit<sp/>a<sp/>Message<sp/>handling<sp/>the<sp/>mapped<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newval<sp/>=<sp/>computeValue(mValueToMap,<sp/>mDrive);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forget<sp/>the<sp/>former<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mValueToMap.reset();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastMessage.value<sp/>=<sp/>std::move(newval);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLastMessage;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLastMessage;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapper_impl::start()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>driver<sp/>address<sp/>value<sp/>observation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDriverValueObserved)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>mDriverValueCallbackIndex<sp/>=<sp/>mDriverAddress.add_callback(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>val)<sp/>{<sp/>driverValueCallback(val);<sp/>});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>mDriverValueObserved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>def_val<sp/>=<sp/>mDriverAddress.cloneValue();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>driverValueCallback(def_val);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapper_impl::stop()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>driver<sp/>address<sp/>value<sp/>observation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDriverValueObserved)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>mDriverAddress.remove_callback(mDriverValueCallbackIndex);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>mDriverValueObserved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapper_impl::pause()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapper_impl::resume()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>mapper_impl::getDriverAddress()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDriverAddress;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>mapper_impl::getDrivenAddress()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDrivenAddress;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>mapper_impl::getDriving()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDrive;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref><sp/>mapper_impl::computeValue(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>driver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>drive)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(drive.getType())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197ad39b16a7ab73cbdc6d560d1cf9515034" kindref="member">ossia::val_type::BEHAVIOR</ref>:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>=<sp/>drive.get&lt;<ref refid="structossia_1_1_behavior" kindref="compound">ossia::Behavior</ref>&gt;();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_curve<sp/>=<sp/>b.value.get();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>base_curve-&gt;getType();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t.first)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::FLOAT:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>val<sp/>=<sp/>driver.get&lt;<ref refid="structossia_1_1_float" kindref="compound">ossia::Float</ref>&gt;();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t.second)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::FLOAT:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;float,<sp/>float&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_float" kindref="compound">ossia::Float</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::INT:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;float,<sp/>int&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_int" kindref="compound">ossia::Int</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::BOOL:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;float,<sp/>bool&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_bool" kindref="compound">ossia::Bool</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::DOUBLE:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::INT:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>val<sp/>=<sp/>driver.get&lt;<ref refid="structossia_1_1_int" kindref="compound">ossia::Int</ref>&gt;();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t.second)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::FLOAT:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;int,<sp/>float&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_float" kindref="compound">ossia::Float</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::INT:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;int,<sp/>int&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_int" kindref="compound">ossia::Int</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::BOOL:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;int,<sp/>bool&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_bool" kindref="compound">ossia::Bool</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::DOUBLE:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::BOOL:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>val<sp/>=<sp/>driver.get&lt;<ref refid="structossia_1_1_bool" kindref="compound">ossia::Bool</ref>&gt;();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t.second)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::FLOAT:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;bool,<sp/>float&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_float" kindref="compound">ossia::Float</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::INT:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;bool,<sp/>int&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_int" kindref="compound">ossia::Int</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::BOOL:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">curve_impl&lt;bool,<sp/>bool&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(base_curve);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_bool" kindref="compound">ossia::Bool</ref>{curve-&gt;valueAt(val.value)};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::DOUBLE:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ossia::curve_segment_type::DOUBLE:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;none<sp/>handled<sp/>driver<sp/>value<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197a5f6f02198ea426cd88e552e6a59ba307" kindref="member">ossia::val_type::TUPLE</ref>:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>t_drive<sp/>=<sp/>drive.get&lt;<ref refid="structossia_1_1_tuple" kindref="compound">ossia::Tuple</ref>&gt;();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(driver.getType()<sp/>==<sp/><ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197a5f6f02198ea426cd88e552e6a59ba307" kindref="member">ossia::val_type::TUPLE</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>t_driver<sp/>=<sp/>driver.get&lt;<ref refid="structossia_1_1_tuple" kindref="compound">ossia::Tuple</ref>&gt;();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ossia::value&gt;<sp/>t_value;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_value.reserve(t_drive.value.size());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_driver<sp/>=<sp/>t_driver.value.begin();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e_drive<sp/>:<sp/>t_drive.value)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_driver<sp/>==<sp/>t_driver.value.end())</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_value.push_back(computeValue(*it_driver,<sp/>e_drive));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_driver++;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structossia_1_1_tuple" kindref="compound">ossia::Tuple</ref>{std::move(t_value)};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;none<sp/>handled<sp/>drive<sp/>value<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;none<sp/>handled<sp/>drive<sp/>value<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapper_impl::driverValueCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1value" kindref="compound">ossia::value</ref>&amp;<sp/>value)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mValueToMapMutex);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>mValueToMap<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/detail/Mapper_impl.cpp"/>
  </compounddef>
</doxygen>
