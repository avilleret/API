<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classossia_1_1mapper" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ossia::mapper</compoundname>
    <basecompoundref refid="classossia_1_1time__process" prot="public" virt="non-virtual">ossia::time_process</basecompoundref>
    <derivedcompoundref refid="classossia_1_1detail_1_1mapper__impl" prot="public" virt="non-virtual">ossia::detail::mapper_impl</derivedcompoundref>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classossia_1_1mapper_1a645dccfa669539f91f7d182d1a09f254" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classossia_1_1mapper" kindref="compound">mapper</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mapper &gt; ossia::mapper::create</definition>
        <argsstring>(net::address_base &amp;, net::address_base &amp;, const value &amp;)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classossia_1_1net_1_1address__base" kindref="compound">net::address_base</ref> &amp;</type>
          <defname>driverAddress</defname>
        </param>
        <param>
          <type><ref refid="classossia_1_1net_1_1address__base" kindref="compound">net::address_base</ref> &amp;</type>
          <defname>drivenAddress</defname>
        </param>
        <param>
          <type>const <ref refid="classossia_1_1value" kindref="compound">value</ref> &amp;</type>
          <defname>drive</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>driver address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>driven address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>how</parametername>
</parameternamelist>
<parameterdescription>
<para>to map the driver address value on the driven address value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new mapper </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="29" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.cpp" bodystart="5" bodyend="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classossia_1_1mapper_1ae9f0de871c132463b1bc36506fafa264" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ossia::mapper::~mapper</definition>
        <argsstring>()</argsstring>
        <name>~mapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1mapper_1ac879a9d04aa0db97fde141b515adea31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classossia_1_1net_1_1address__base" kindref="compound">net::address_base</ref> &amp;</type>
        <definition>virtual const net::address_base&amp; ossia::mapper::getDriverAddress</definition>
        <argsstring>() const =0</argsstring>
        <name>getDriverAddress</name>
        <reimplementedby refid="classossia_1_1detail_1_1mapper__impl_1a799c334cd893d52c434330ea39840554">getDriverAddress</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the driver address <simplesect kind="return"><para>observed address </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1mapper_1a4821b67399a5e655380985eef8dc9db8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classossia_1_1net_1_1address__base" kindref="compound">net::address_base</ref> &amp;</type>
        <definition>virtual const net::address_base&amp; ossia::mapper::getDrivenAddress</definition>
        <argsstring>() const =0</argsstring>
        <name>getDrivenAddress</name>
        <reimplementedby refid="classossia_1_1detail_1_1mapper__impl_1a92935bf44b7de091ff44396356fa0ba4">getDrivenAddress</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the driven address <simplesect kind="return"><para>driven address </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1mapper_1a5eca43d012efed37361dcad8013437e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classossia_1_1value" kindref="compound">value</ref> &amp;</type>
        <definition>virtual const value&amp; ossia::mapper::getDriving</definition>
        <argsstring>() const =0</argsstring>
        <name>getDriving</name>
        <reimplementedby refid="classossia_1_1detail_1_1mapper__impl_1a34a87995cea8b06abe412a958e9424da">getDriving</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the driving value <simplesect kind="return"><para>driving value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="44" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="258">
        <label>ossia::mapper</label>
        <link refid="classossia_1_1mapper"/>
        <childnode refid="259" relation="public-inheritance">
        </childnode>
      </node>
      <node id="259">
        <label>ossia::time_process</label>
        <link refid="classossia_1_1time__process"/>
      </node>
      <node id="260">
        <label>ossia::detail::mapper_impl</label>
        <link refid="classossia_1_1detail_1_1mapper__impl"/>
        <childnode refid="258" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="261">
        <label>ossia::mapper</label>
        <link refid="classossia_1_1mapper"/>
        <childnode refid="262" relation="public-inheritance">
        </childnode>
      </node>
      <node id="262">
        <label>ossia::time_process</label>
        <link refid="classossia_1_1time__process"/>
      </node>
    </collaborationgraph>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" line="20" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/mapper/mapper.hpp" bodystart="19" bodyend="45"/>
    <listofallmembers>
      <member refid="classossia_1_1mapper_1a645dccfa669539f91f7d182d1a09f254" prot="public" virt="non-virtual"><scope>ossia::mapper</scope><name>create</name></member>
      <member refid="classossia_1_1mapper_1a4821b67399a5e655380985eef8dc9db8" prot="public" virt="pure-virtual"><scope>ossia::mapper</scope><name>getDrivenAddress</name></member>
      <member refid="classossia_1_1mapper_1ac879a9d04aa0db97fde141b515adea31" prot="public" virt="pure-virtual"><scope>ossia::mapper</scope><name>getDriverAddress</name></member>
      <member refid="classossia_1_1mapper_1a5eca43d012efed37361dcad8013437e6" prot="public" virt="pure-virtual"><scope>ossia::mapper</scope><name>getDriving</name></member>
      <member refid="classossia_1_1time__process_1a92c95de9f0ccb5bc02dec36876797d50" prot="public" virt="pure-virtual"><scope>ossia::mapper</scope><name>offset</name></member>
      <member refid="classossia_1_1time__process_1a10614dc2642a86e19a393a09c416a5a9" prot="public" virt="non-virtual"><scope>ossia::mapper</scope><name>parent</name></member>
      <member refid="classossia_1_1time__process_1a422f665c7d123d7f278b69a1078fa7af" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>pause</name></member>
      <member refid="classossia_1_1time__process_1a8820b0944cadf7b6b3c4d000404e385b" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>resume</name></member>
      <member refid="classossia_1_1time__process_1ad2548b4db49e9bb0b7e37bd2078d3add" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>start</name></member>
      <member refid="classossia_1_1time__process_1abddea425be33b2e6d08c548a9443f6ed" prot="public" virt="pure-virtual"><scope>ossia::mapper</scope><name>state</name></member>
      <member refid="classossia_1_1time__process_1a2b36f9175d11512bb66593c94a3d2e17" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>stop</name></member>
      <member refid="classossia_1_1mapper_1ae9f0de871c132463b1bc36506fafa264" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>~mapper</name></member>
      <member refid="classossia_1_1time__process_1a1ce7e65bd4252a07c65ccc0f74090c11" prot="public" virt="virtual"><scope>ossia::mapper</scope><name>~time_process</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
