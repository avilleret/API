<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="generic__node_8hpp" kind="file" language="C++">
    <compoundname>generic_node.hpp</compoundname>
    <includes refid="callback__container_8hpp" local="no">ossia/detail/callback_container.hpp</includes>
    <includes refid="node_8hpp" local="no">ossia/network/base/node.hpp</includes>
    <includes refid="address__properties_8hpp" local="no">ossia/network/common/address_properties.hpp</includes>
    <includes local="no">functional</includes>
    <includes local="no">map</includes>
    <includedby refid="address_8cpp" local="no">address.cpp</includedby>
    <includedby refid="generic__device_8cpp" local="no">generic_device.cpp</includedby>
    <includedby refid="generic__device_8hpp" local="no">generic_device.hpp</includedby>
    <includedby refid="generic__node_8cpp" local="no">generic_node.cpp</includedby>
    <includedby refid="minuit__parser_8hpp" local="no">minuit_parser.hpp</includedby>
    <includedby refid="minuit_8hpp" local="no">minuit.hpp</includedby>
    <includedby refid="network_8hpp" local="no">network.hpp</includedby>
    <incdepgraph>
      <node id="2033">
        <label>list</label>
      </node>
      <node id="2039">
        <label>functional</label>
      </node>
      <node id="2040">
        <label>string</label>
      </node>
      <node id="2034">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="2032" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2039" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
      </node>
      <node id="2042">
        <label>ossia_export.h</label>
      </node>
      <node id="2043">
        <label>map</label>
      </node>
      <node id="2032">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="2033" relation="include">
        </childnode>
      </node>
      <node id="2038">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="2037">
        <label>vector</label>
      </node>
      <node id="2035">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2037" relation="include">
        </childnode>
      </node>
      <node id="2041">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="2031">
        <label>generic_node.hpp</label>
        <link refid="generic_node.hpp"/>
        <childnode refid="2032" relation="include">
        </childnode>
        <childnode refid="2034" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2039" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2036">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2045">
        <label>generic_device.hpp</label>
        <link refid="generic__device_8hpp_source"/>
        <childnode refid="2046" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
      </node>
      <node id="2048">
        <label>network.hpp</label>
        <link refid="network_8hpp_source"/>
        <childnode refid="2049" relation="include">
        </childnode>
      </node>
      <node id="2047">
        <label>minuit_parser.hpp</label>
        <link refid="minuit__parser_8hpp_source"/>
      </node>
      <node id="2046">
        <label>generic_address.hpp</label>
        <link refid="generic__address_8hpp_source"/>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
      </node>
      <node id="2049">
        <label>ossia.hpp</label>
        <link refid="ossia_8hpp_source"/>
      </node>
      <node id="2051">
        <label>minuit.hpp</label>
        <link refid="minuit_8hpp_source"/>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
      </node>
      <node id="2050">
        <label>osc.hpp</label>
        <link refid="detail_2osc_8hpp_source"/>
        <childnode refid="2047" relation="include">
        </childnode>
      </node>
      <node id="2044">
        <label>generic_node.hpp</label>
        <link refid="generic_node.hpp"/>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classossia_1_1net_1_1generic__node" prot="public">ossia::net::generic_node</innerclass>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1net">ossia::net</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/detail/callback_container.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/base/node.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/common/address_properties.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">protocol_base;</highlight></codeline>
<codeline lineno="12" refid="classossia_1_1net_1_1generic__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OSSIA_EXPORT<sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::string<sp/>mName;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">ossia::net::device_base</ref>&amp;<sp/>mDevice;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>*<sp/>mParent{};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ossia::net::address_base&gt;<sp/>mAddress;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>(<ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;<sp/>operator=(<ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,<sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">ossia::net::device_base</ref>&amp;<sp/>aDevice,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>&amp;<sp/>aParent);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>(std::string<sp/>name,<sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">ossia::net::device_base</ref>&amp;<sp/>aDevice);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>~<ref refid="classossia_1_1net_1_1generic__node" kindref="compound">generic_node</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1device__base" kindref="compound">ossia::net::device_base</ref>&amp;<sp/>getDevice()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDevice;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>*<sp/>getParent()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mParent;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::string<sp/>getName()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>setName(std::string)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>*<sp/>getAddress()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>*<sp/>createAddress(<ref refid="namespaceossia_1a3ffbe4af0c7e8ac5cf1503a72f2a6197" kindref="member">ossia::val_type</ref><sp/>type)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeAddress()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;node_base&gt;<sp/>makeChild(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removingChild(<ref refid="classossia_1_1net_1_1node__base" kindref="compound">node_base</ref>&amp;)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/network/generic/generic_node.hpp"/>
  </compounddef>
</doxygen>
