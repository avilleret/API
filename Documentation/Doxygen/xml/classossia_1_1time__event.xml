<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classossia_1_1time__event" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ossia::time_event</compoundname>
    <derivedcompoundref refid="classossia_1_1detail_1_1time__event__impl" prot="public" virt="non-virtual">ossia::detail::time_event_impl</derivedcompoundref>
    <includes refid="time__event_8hpp" local="no">time_event.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257" prot="public" static="no">
        <name>Status</name>
        <enumvalue id="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257ac69f06e1a9b016d133907b4e5f5864d2" prot="public">
          <name>PENDING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257acb2411a3555903824fc0b664b04b203e" prot="public">
          <name>HAPPENED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257aa7cc3ad8151e0ac4431abda2e61a951d" prot="public">
          <name>DISPOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>event status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="33" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="typedef" id="classossia_1_1time__event_1a3a9a769fd9ee7e8cba1e8942cd0f252a" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257" kindref="member">Status</ref>)&gt;</type>
        <definition>using ossia::time_event::ExecutionCallback =  std::function&lt;void(Status)&gt;</definition>
        <argsstring></argsstring>
        <name>ExecutionCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to get the event status back <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype></parametertype>
<parametername>Status</parametername>
</parameternamelist>
<parameterdescription>
<para>new status </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="45" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classossia_1_1time__event_1ae21ebc5ec42582ebafceddeb06cd2afb" prot="private" static="no" mutable="no">
        <type>ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt;</type>
        <definition>ptr_container&lt;time_constraint&gt; ossia::time_event::m_previousTimeConstraints</definition>
        <argsstring></argsstring>
        <name>m_previousTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="126" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classossia_1_1time__event_1ac80b84b56e2a4cb242ba87a9c4810434" prot="private" static="no" mutable="no">
        <type>ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt;</type>
        <definition>ptr_container&lt;time_constraint&gt; ossia::time_event::m_nextTimeConstraints</definition>
        <argsstring></argsstring>
        <name>m_nextTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="127" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classossia_1_1time__event_1ac826f1910d0d2a94a73a59aec23919da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ossia::time_event::~time_event</definition>
        <argsstring>()</argsstring>
        <name>~time_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a99bdc5696eab82d47ca4502d0d93d706" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ossia::time_event::setCallback</definition>
        <argsstring>(time_event::ExecutionCallback)=0</argsstring>
        <name>setCallback</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a2cac650003cd8517af228f817cac7d0c">setCallback</reimplementedby>
        <param>
          <type><ref refid="classossia_1_1time__event_1a3a9a769fd9ee7e8cba1e8942cd0f252a" kindref="member">time_event::ExecutionCallback</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes the callback in the event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype></parametertype>
<parametername>TimeEvent::ExecutionCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>to get #TimeEvent&apos;s status back</para></parameterdescription>
</parameteritem>
</parameterlist>
this may be unsafe to do during execution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a6cdac581d7685b29881a7f96d951f5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ossia::time_event::happen</definition>
        <argsstring>()=0</argsstring>
        <name>happen</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a3e5f9a77b2ffeb58cfb2a608de3f47f3">happen</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>make the event happen to propagate the execution to next TimeConstraints</para><para>the event have to be in PENDING status to call this method otherwise it will raise a runtime_error</para><para>turning the event&apos; status into HAPPENED will call the callback to notify its owner </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a93bd2f99eea464cb90d55a108fc199c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ossia::time_event::dispose</definition>
        <argsstring>()=0</argsstring>
        <name>dispose</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1ac1b91c98c1e86a3ec0c495288ca12fa9">dispose</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dispose the event to not propagate the execution to next TimeConstraints</para><para>the event have to be in PENDING status to call this method otherwise it will raise a runtime_error</para><para>turning the event&apos; status into DISPOSED will call the callback to notify its owner </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1af3c02d50fa1f73930fa04aecc7197f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ossia::time_event::addState</definition>
        <argsstring>(state &amp;&amp;)=0</argsstring>
        <name>addState</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a59a3b501547eba909ef6e207419b5ba1">addState</reimplementedby>
        <param>
          <type><ref refid="classossia_1_1state" kindref="compound">state</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add a sub state into the state of the event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>std::shared_ptr&lt;</parametertype>
<parametername>State&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a1823e48b577ec5b9d8edc9f6b2738677" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ossia::time_event::removeState</definition>
        <argsstring>(const state &amp;)=0</argsstring>
        <name>removeState</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a40eec577ced63bf735555a6a023bd2c9">removeState</reimplementedby>
        <param>
          <type>const <ref refid="classossia_1_1state" kindref="compound">state</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove a sub state from the state of the event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>std::shared_ptr&lt;</parametertype>
<parametername>State&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>to remove </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1ae1f6bfc019dd42773f8b19eb2904d7f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classossia_1_1time__node" kindref="compound">time_node</ref> &gt; &amp;</type>
        <definition>virtual const std::shared_ptr&lt;time_node&gt;&amp; ossia::time_event::getTimeNode</definition>
        <argsstring>() const =0</argsstring>
        <name>getTimeNode</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1af8ed8b6a3628b51bbac46eaec3395027">getTimeNode</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the #TimeNode where the event is <simplesect kind="return"><para>std::shared_ptr&lt;#TimeNode&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a3d4a55097e38c6c01d6c4d773b99ec41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classossia_1_1state" kindref="compound">state</ref> &amp;</type>
        <definition>virtual const state&amp; ossia::time_event::getState</definition>
        <argsstring>() const =0</argsstring>
        <name>getState</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a4d1c36831c65be77e455fd4e4946e82f">getState</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the state of the event <simplesect kind="return"><para>std::shared_ptr&lt;#State&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a6f4615adaa336b180566b137831d7f90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="namespaceossia_1a5b622aa7ca8d6e60ce91f567ec10b151" kindref="member">expression</ref> &amp;</type>
        <definition>virtual const expression&amp; ossia::time_event::getExpression</definition>
        <argsstring>() const =0</argsstring>
        <name>getExpression</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1ae0e3e85f03f27153887805e9293e0693">getExpression</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the expression of the event <simplesect kind="return"><para>std::shared_ptr&lt;#Expression&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a751e2383b66e6e7f4b0184861f5aca39" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classossia_1_1time__event" kindref="compound">time_event</ref> &amp;</type>
        <definition>virtual time_event&amp; ossia::time_event::setExpression</definition>
        <argsstring>(expression_ptr)=0</argsstring>
        <name>setExpression</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a8cdde812f88e863090d4c7e12db79add">setExpression</reimplementedby>
        <param>
          <type>expression_ptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the expression of the event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>std::shared_ptr&lt;</parametertype>
<parametername>Expression&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>#TimeEvent the event </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a4196471a4678c39286a53f553ad3e1f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257" kindref="member">Status</ref></type>
        <definition>virtual Status ossia::time_event::getStatus</definition>
        <argsstring>() const =0</argsstring>
        <name>getStatus</name>
        <reimplementedby refid="classossia_1_1detail_1_1time__event__impl_1a54334cc3e97e93b3f29149a0e42f7b90">getStatus</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the status of the event <simplesect kind="return"><para><ref refid="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257" kindref="member">Status</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1a8cdbfa110357730ccfd8015502c0555d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt; &amp;</type>
        <definition>ptr_container&lt;time_constraint&gt;&amp; ossia::time_event::previousTimeConstraints</definition>
        <argsstring>()</argsstring>
        <name>previousTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get previous time contraints attached to the event <simplesect kind="return"><para>#Container&lt;#TimeConstraint&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="99" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1acbaa50b6aa7cdaf9c619486fb4bd25d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt; &amp;</type>
        <definition>const ptr_container&lt;time_constraint&gt;&amp; ossia::time_event::previousTimeConstraints</definition>
        <argsstring>() const </argsstring>
        <name>previousTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get previous time contraints attached to the event <simplesect kind="return"><para>#Container&lt;#TimeProcess&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="106" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1aefe8230a90726a9ab1dc06b4c96f8ea2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt; &amp;</type>
        <definition>ptr_container&lt;time_constraint&gt;&amp; ossia::time_event::nextTimeConstraints</definition>
        <argsstring>()</argsstring>
        <name>nextTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get next time contraints attached to the event <simplesect kind="return"><para>#Container&lt;#TimeConstraint&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="113" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classossia_1_1time__event_1ae912489b55a36a6e42a7711d80981638" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ptr_container&lt; <ref refid="classossia_1_1time__constraint" kindref="compound">time_constraint</ref> &gt; &amp;</type>
        <definition>const ptr_container&lt;time_constraint&gt;&amp; ossia::time_event::nextTimeConstraints</definition>
        <argsstring>() const </argsstring>
        <name>nextTimeConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get next time contraints attached to the event <simplesect kind="return"><para>#Container&lt;#TimeProcess&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="120" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classossia_1_1time__event" kindref="compound">time_event</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>#TimeEvent is use to describe temporal structure to launch the start or the end of each attached #TimeConstraint.</para><para>#TimeEvent has a #State and can also be submitted to an #Expression. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="508">
        <label>ossia::time_event</label>
        <link refid="classossia_1_1time__event"/>
      </node>
      <node id="509">
        <label>ossia::detail::time_event_impl</label>
        <link refid="classossia_1_1detail_1_1time__event__impl"/>
        <childnode refid="508" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" line="28" column="1" bodyfile="/tmp/i-score/API/OSSIA/ossia/editor/scenario/time_event.hpp" bodystart="27" bodyend="128"/>
    <listofallmembers>
      <member refid="classossia_1_1time__event_1af3c02d50fa1f73930fa04aecc7197f04" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>addState</name></member>
      <member refid="classossia_1_1time__event_1a93bd2f99eea464cb90d55a108fc199c7" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>dispose</name></member>
      <member refid="classossia_1_1time__event_1a3a9a769fd9ee7e8cba1e8942cd0f252a" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>ExecutionCallback</name></member>
      <member refid="classossia_1_1time__event_1a6f4615adaa336b180566b137831d7f90" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>getExpression</name></member>
      <member refid="classossia_1_1time__event_1a3d4a55097e38c6c01d6c4d773b99ec41" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>getState</name></member>
      <member refid="classossia_1_1time__event_1a4196471a4678c39286a53f553ad3e1f1" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>getStatus</name></member>
      <member refid="classossia_1_1time__event_1ae1f6bfc019dd42773f8b19eb2904d7f1" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>getTimeNode</name></member>
      <member refid="classossia_1_1time__event_1a6cdac581d7685b29881a7f96d951f5f9" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>happen</name></member>
      <member refid="classossia_1_1time__event_1ac80b84b56e2a4cb242ba87a9c4810434" prot="private" virt="non-virtual"><scope>ossia::time_event</scope><name>m_nextTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1ae21ebc5ec42582ebafceddeb06cd2afb" prot="private" virt="non-virtual"><scope>ossia::time_event</scope><name>m_previousTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1aefe8230a90726a9ab1dc06b4c96f8ea2" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>nextTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1ae912489b55a36a6e42a7711d80981638" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>nextTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1a8cdbfa110357730ccfd8015502c0555d" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>previousTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1acbaa50b6aa7cdaf9c619486fb4bd25d0" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>previousTimeConstraints</name></member>
      <member refid="classossia_1_1time__event_1a1823e48b577ec5b9d8edc9f6b2738677" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>removeState</name></member>
      <member refid="classossia_1_1time__event_1a99bdc5696eab82d47ca4502d0d93d706" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>setCallback</name></member>
      <member refid="classossia_1_1time__event_1a751e2383b66e6e7f4b0184861f5aca39" prot="public" virt="pure-virtual"><scope>ossia::time_event</scope><name>setExpression</name></member>
      <member refid="classossia_1_1time__event_1ad803b6146b46ce12fbb832695243d257" prot="public" virt="non-virtual"><scope>ossia::time_event</scope><name>Status</name></member>
      <member refid="classossia_1_1time__event_1ac826f1910d0d2a94a73a59aec23919da" prot="public" virt="virtual"><scope>ossia::time_event</scope><name>~time_event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
