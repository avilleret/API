<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="minuit_8cpp" kind="file" language="C++">
    <compoundname>minuit.cpp</compoundname>
    <includes refid="generic__address_8hpp" local="no">ossia/network/generic/generic_address.hpp</includes>
    <includes refid="minuit_8hpp" local="no">ossia/network/minuit/minuit.hpp</includes>
    <includes refid="minuit__parser_8hpp" local="no">ossia/network/minuit/detail/minuit_parser.hpp</includes>
    <includes refid="detail_2osc_8hpp" local="no">ossia/network/osc/detail/osc.hpp</includes>
    <includes local="no">oscpack/osc/OscPrintReceivedElements.h</includes>
    <incdepgraph>
      <node id="3342">
        <label>list</label>
      </node>
      <node id="3359">
        <label>ossia/editor/value/impulse.hpp</label>
        <link refid="impulse_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3369">
        <label>ossia/network/domain/detail/domain_visitors.hpp</label>
        <link refid="domain__visitors_8hpp_source"/>
        <childnode refid="3370" relation="include">
        </childnode>
      </node>
      <node id="3377">
        <label>functional</label>
      </node>
      <node id="3390">
        <label>ossia/network/osc/detail/receiver.hpp</label>
        <link refid="receiver_8hpp_source"/>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3391" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3392" relation="include">
        </childnode>
        <childnode refid="3393" relation="include">
        </childnode>
        <childnode refid="3394" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
      </node>
      <node id="3373">
        <label>ossia/editor/value/value_traits.hpp</label>
        <link refid="value__traits_8hpp_source"/>
        <childnode refid="3343" relation="include">
        </childnode>
      </node>
      <node id="3400">
        <label>oscpack/osc/OscOutboundPacketStream.h</label>
      </node>
      <node id="3393">
        <label>oscpack/osc/OscDebug.h</label>
      </node>
      <node id="3363">
        <label>ossia/editor/value/tuple.hpp</label>
        <link refid="tuple_8hpp_source"/>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
      </node>
      <node id="3379">
        <label>ossia/network/generic/generic_device.hpp</label>
        <link refid="generic__device_8hpp_source"/>
        <childnode refid="3380" relation="include">
        </childnode>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3385" relation="include">
        </childnode>
      </node>
      <node id="3389">
        <label>ossia/network/base/protocol.hpp</label>
        <link refid="protocol_8hpp_source"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3366">
        <label>eggs/variant.hpp</label>
      </node>
      <node id="3372">
        <label>cmath</label>
      </node>
      <node id="3353">
        <label>ossia/detail/destination_index.hpp</label>
        <link refid="destination__index_8hpp_source"/>
        <childnode refid="3354" relation="include">
        </childnode>
      </node>
      <node id="3398">
        <label>oscpack/osc/SmallString.h</label>
      </node>
      <node id="3397">
        <label>ossia/network/osc/detail/string_view.hpp</label>
        <link refid="string__view_8hpp_source"/>
        <childnode refid="3385" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3398" relation="include">
        </childnode>
        <childnode refid="3376" relation="include">
        </childnode>
      </node>
      <node id="3362">
        <label>string</label>
      </node>
      <node id="3381">
        <label>ossia/network/base/node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="3341" relation="include">
        </childnode>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3355" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3347">
        <label>ossia_export.h</label>
      </node>
      <node id="3384">
        <label>map</label>
      </node>
      <node id="3403">
        <label>exception</label>
      </node>
      <node id="3367">
        <label>ossia/network/base/address.hpp</label>
        <link refid="address_8hpp_source"/>
        <childnode refid="3341" relation="include">
        </childnode>
        <childnode refid="3353" relation="include">
        </childnode>
        <childnode refid="3355" relation="include">
        </childnode>
        <childnode refid="3368" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3394">
        <label>oscpack/osc/OscPacketListener.h</label>
      </node>
      <node id="3364">
        <label>ossia/editor/value/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="3365" relation="include">
        </childnode>
      </node>
      <node id="3361">
        <label>ossia/editor/value/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
      </node>
      <node id="3399">
        <label>boost/container/small_vector.hpp</label>
      </node>
      <node id="3407">
        <label>ossia/network/minuit/detail/minuit_parser.hpp</label>
        <link refid="minuit__parser_8hpp_source"/>
        <childnode refid="3340" relation="include">
        </childnode>
        <childnode refid="3379" relation="include">
        </childnode>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
      </node>
      <node id="3401">
        <label>ossia/network/minuit/detail/minuit_name_table.hpp</label>
        <link refid="minuit__name__table_8hpp_source"/>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3365" relation="include">
        </childnode>
        <childnode refid="3385" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
      </node>
      <node id="3396">
        <label>ossia/network/osc/detail/message_generator.hpp</label>
        <link refid="message__generator_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3399" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
        <childnode refid="3365" relation="include">
        </childnode>
        <childnode refid="3391" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
      </node>
      <node id="3344">
        <label>ossia/editor/value/value_base.hpp</label>
        <link refid="value__base_8hpp_source"/>
        <childnode refid="3345" relation="include">
        </childnode>
        <childnode refid="3350" relation="include">
        </childnode>
        <childnode refid="3351" relation="include">
        </childnode>
        <childnode refid="3352" relation="include">
        </childnode>
        <childnode refid="3358" relation="include">
        </childnode>
        <childnode refid="3359" relation="include">
        </childnode>
        <childnode refid="3360" relation="include">
        </childnode>
        <childnode refid="3361" relation="include">
        </childnode>
        <childnode refid="3363" relation="include">
        </childnode>
        <childnode refid="3364" relation="include">
        </childnode>
      </node>
      <node id="3339">
        <label>minuit.cpp</label>
        <link refid="minuit.cpp"/>
        <childnode refid="3340" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
      </node>
      <node id="3409">
        <label>oscpack/osc/OscReceivedElements.h</label>
      </node>
      <node id="3340">
        <label>ossia/network/generic/generic_address.hpp</label>
        <link refid="generic__address_8hpp_source"/>
        <childnode refid="3341" relation="include">
        </childnode>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3367" relation="include">
        </childnode>
        <childnode refid="3379" relation="include">
        </childnode>
        <childnode refid="3386" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
      </node>
      <node id="3341">
        <label>ossia/detail/callback_container.hpp</label>
        <link refid="callback__container_8hpp_source"/>
        <childnode refid="3342" relation="include">
        </childnode>
      </node>
      <node id="3350">
        <label>ossia/editor/value/bool.hpp</label>
        <link refid="bool_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3368">
        <label>ossia/network/domain/domain.hpp</label>
        <link refid="domain_8hpp_source"/>
        <childnode refid="3369" relation="include">
        </childnode>
        <childnode refid="3370" relation="include">
        </childnode>
      </node>
      <node id="3374">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="3355">
        <label>ossia/network/common/address_properties.hpp</label>
        <link refid="address__properties_8hpp_source"/>
      </node>
      <node id="3405">
        <label>future</label>
      </node>
      <node id="3357">
        <label>vector</label>
      </node>
      <node id="3371">
        <label>ossia/detail/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="3372" relation="include">
        </childnode>
      </node>
      <node id="3351">
        <label>ossia/editor/value/char.hpp</label>
        <link refid="char_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3382">
        <label>ossia/detail/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
      </node>
      <node id="3348">
        <label>utility</label>
      </node>
      <node id="3365">
        <label>array</label>
      </node>
      <node id="3352">
        <label>ossia/editor/value/destination.hpp</label>
        <link refid="destination_8hpp_source"/>
        <childnode refid="3353" relation="include">
        </childnode>
        <childnode refid="3355" relation="include">
        </childnode>
        <childnode refid="3356" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
        <childnode refid="3357" relation="include">
        </childnode>
      </node>
      <node id="3378">
        <label>nano_signal_slot.hpp</label>
      </node>
      <node id="3402">
        <label>ossia/network/minuit/detail/minuit_common.hpp</label>
        <link refid="minuit__common_8hpp_source"/>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3385" relation="include">
        </childnode>
        <childnode refid="3403" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
      </node>
      <node id="3360">
        <label>ossia/editor/value/int.hpp</label>
        <link refid="int_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3388">
        <label>ossia/network/minuit/minuit.hpp</label>
        <link refid="minuit_8hpp_source"/>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3368" relation="include">
        </childnode>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3390" relation="include">
        </childnode>
        <childnode refid="3395" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3386" relation="include">
        </childnode>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
      </node>
      <node id="3358">
        <label>ossia/editor/value/float.hpp</label>
        <link refid="float_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3346">
        <label>ossia/editor/curve/curve_abstract.hpp</label>
        <link refid="curve__abstract_8hpp_source"/>
        <childnode refid="3347" relation="include">
        </childnode>
        <childnode refid="3348" relation="include">
        </childnode>
      </node>
      <node id="3392">
        <label>oscpack/ip/UdpSocket.h</label>
      </node>
      <node id="3391">
        <label>iostream</label>
      </node>
      <node id="3380">
        <label>ossia/network/base/device.hpp</label>
        <link refid="device_8hpp_source"/>
        <childnode refid="3381" relation="include">
        </childnode>
        <childnode refid="3378" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3343">
        <label>ossia/editor/value/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="3344" relation="include">
        </childnode>
        <childnode refid="3366" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3404">
        <label>unordered_map</label>
      </node>
      <node id="3386">
        <label>mutex</label>
      </node>
      <node id="3370">
        <label>ossia/network/domain/domain_base.hpp</label>
        <link refid="domain__base_8hpp_source"/>
        <childnode refid="3371" relation="include">
        </childnode>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3373" relation="include">
        </childnode>
        <childnode refid="3374" relation="include">
        </childnode>
        <childnode refid="3375" relation="include">
        </childnode>
        <childnode refid="3376" relation="include">
        </childnode>
      </node>
      <node id="3385">
        <label>boost/utility/string_ref.hpp</label>
      </node>
      <node id="3375">
        <label>boost/optional.hpp</label>
      </node>
      <node id="3408">
        <label>ossia/network/osc/detail/osc.hpp</label>
        <link refid="detail_2osc_8hpp_source"/>
        <childnode refid="3343" relation="include">
        </childnode>
        <childnode refid="3367" relation="include">
        </childnode>
        <childnode refid="3368" relation="include">
        </childnode>
        <childnode refid="3340" relation="include">
        </childnode>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
      </node>
      <node id="3383">
        <label>ossia/network/generic/generic_node.hpp</label>
        <link refid="generic__node_8hpp_source"/>
        <childnode refid="3341" relation="include">
        </childnode>
        <childnode refid="3381" relation="include">
        </childnode>
        <childnode refid="3355" relation="include">
        </childnode>
        <childnode refid="3377" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
      </node>
      <node id="3387">
        <label>thread</label>
      </node>
      <node id="3395">
        <label>ossia/network/osc/detail/sender.hpp</label>
        <link refid="sender_8hpp_source"/>
        <childnode refid="3396" relation="include">
        </childnode>
        <childnode refid="3392" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
        <childnode refid="3391" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3362" relation="include">
        </childnode>
      </node>
      <node id="3376">
        <label>type_traits</label>
      </node>
      <node id="3345">
        <label>ossia/editor/value/behavior.hpp</label>
        <link refid="behavior_8hpp_source"/>
        <childnode refid="3346" relation="include">
        </childnode>
        <childnode refid="3349" relation="include">
        </childnode>
        <childnode refid="3347" relation="include">
        </childnode>
      </node>
      <node id="3406">
        <label>set</label>
      </node>
      <node id="3354">
        <label>boost/container/static_vector.hpp</label>
      </node>
      <node id="3349">
        <label>memory</label>
      </node>
      <node id="3356">
        <label>initializer_list</label>
      </node>
      <node id="3410">
        <label>oscpack/osc/OscPrintReceivedElements.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceossia">ossia</innernamespace>
    <innernamespace refid="namespaceossia_1_1net">ossia::net</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ossia/network/generic/generic_address.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/minuit/minuit.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/minuit/detail/minuit_parser.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ossia/network/osc/detail/osc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;oscpack/osc/OscPrintReceivedElements.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceossia" kindref="compound">ossia</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">minuit_protocol::minuit_protocol(</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>local_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>remote_ip,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>remote_port,<sp/>uint16_t<sp/>local_port)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>mLocalName{local_name}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mIp{remote_ip}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mRemotePort{remote_port}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mLocalPort{local_port}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>sender{remote_ip,<sp/>remote_port}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>mReceiver{local_port,<sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::ReceivedMessage&amp;<sp/>m,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::IpEndpointName&amp;<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleReceivedMessage(m,<sp/>ip);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>name_table.set_device_name(mLocalName);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mReceiver.port()<sp/>!=<sp/>local_port)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>connect:<sp/>current<sp/>in<sp/>port<sp/>==<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mReceiver.port()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>mReceiver.run();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">minuit_protocol::~minuit_protocol()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>mReceiver.stop();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>minuit_protocol::setDevice(<ref refid="classossia_1_1net_1_1device__base" kindref="compound">ossia::net::device_base</ref>&amp;<sp/>dev)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>mDevice<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">generic_device*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;dev);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>minuit_protocol::getIp()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIp;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">minuit_protocol&amp;<sp/>minuit_protocol::setIp(std::string<sp/>ip)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>mIp<sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>sender<sp/>=<sp/><ref refid="classosc_1_1sender" kindref="compound">osc::sender</ref>{mIp,<sp/>mRemotePort};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">uint16_t<sp/>minuit_protocol::getRemotePort()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRemotePort;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">minuit_protocol&amp;<sp/>minuit_protocol::setRemotePort(uint16_t<sp/>in_port)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>mRemotePort<sp/>=<sp/>in_port;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>sender<sp/>=<sp/><ref refid="classosc_1_1sender" kindref="compound">osc::sender</ref>{mIp,<sp/>mRemotePort};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">uint16_t<sp/>minuit_protocol::getLocalPort()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLocalPort;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">minuit_protocol&amp;<sp/>minuit_protocol::setLocalPort(uint16_t<sp/>out_port)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>mLocalPort<sp/>=<sp/>out_port;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>mReceiver<sp/>=<sp/><ref refid="classosc_1_1receiver" kindref="compound">osc::receiver</ref>{out_port,<sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::ReceivedMessage&amp;<sp/>m,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::IpEndpointName&amp;<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleReceivedMessage(m,<sp/>ip);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minuit_protocol::update(<ref refid="classossia_1_1net_1_1node__base" kindref="compound">ossia::net::node_base</ref>&amp;<sp/>node)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>node.clearChildren();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>node.removeAddress();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>&quot;namespace&quot;<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>mNamespacePromise<sp/>=<sp/>std::promise&lt;void&gt;{};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fut<sp/>=<sp/>mNamespacePromise.get_future();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>name_table.get_action(ossia::minuit::minuit_action::NamespaceRequest);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>refresh(act,<sp/>ossia::net::getOSCAddressAsString(node));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>fut.wait_for(std::chrono::seconds(5));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Won&apos;t<sp/>return<sp/>as<sp/>long<sp/>as<sp/>the<sp/>tree<sp/>exploration<sp/>request<sp/>haven&apos;t<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd_1_1chrono" kindref="compound">std::chrono</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>we<sp/>wait<sp/>for<sp/>the<sp/>&quot;get&quot;<sp/>requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>high_resolution_clock::now();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(duration_cast&lt;milliseconds&gt;(t2<sp/>-<sp/>t1).count()<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pending_get_requests<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(50));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status<sp/>==<sp/>std::future_status::ready;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minuit_protocol::pull(<ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>address)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>&quot;get&quot;<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>put<sp/>them<sp/>in<sp/>a<sp/>set<sp/>to<sp/>check<sp/>that<sp/>we<sp/>get<sp/>the<sp/>correct<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>not<sp/>some<sp/>other<sp/>random<sp/>get<sp/>answer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>get_promise<sp/>=<sp/>std::promise&lt;void&gt;();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fut<sp/>=<sp/>get_promise.get_future();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>name_table.get_action(ossia::minuit::minuit_action::GetRequest);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>addr<sp/>=<sp/>ossia::net::getOSCAddressAsString(address);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>this-&gt;sender.send(act,<sp/>boost::string_ref(addr));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>fut.wait_for(std::chrono::seconds(5));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fut.valid();</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minuit_protocol::push(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>address)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>addr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">generic_address&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr.getAccessMode()<sp/>==<sp/>ossia::access_mode::GET)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>filterValue(addr);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val.valid())</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>sender.send(getOSCAddress(address),<sp/>val);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minuit_protocol::observe(<ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>address,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mListeningMutex);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>name_table.get_action(ossia::minuit::minuit_action::ListenRequest);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sender.send(act,<sp/>getOSCAddress(address),<sp/></highlight><highlight class="stringliteral">&quot;enable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>mListening.insert(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(getOSCAddressAsString(address),<sp/>&amp;address));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sender.send(act,<sp/>getOSCAddress(address),<sp/></highlight><highlight class="stringliteral">&quot;disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>mListening.erase(getOSCAddressAsString(address));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minuit_protocol::observe_quietly(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>address,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mListeningMutex);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enable)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>mListening.insert(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(getOSCAddressAsString(address),<sp/>&amp;address));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>mListening.erase(getOSCAddressAsString(address));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>minuit_protocol::handleReceivedMessage(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::ReceivedMessage&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>oscpack::IpEndpointName&amp;<sp/>ip)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>boost::string_ref<sp/>address{m.AddressPattern()};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>address[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>OSC-like<sp/>case<sp/>where<sp/>we<sp/>receive<sp/>a<sp/>plain<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(mListeningMutex);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>mListening.find(m.AddressPattern());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>mListening.end())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classossia_1_1net_1_1address__base" kindref="compound">ossia::net::address_base</ref>&amp;<sp/>addr<sp/>=<sp/>*it-&gt;second;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateValue(addr,<sp/>m);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDevice)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ossia::minuit::minuit_message_handler::handleMinuitMessage(</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*mDevice,<sp/>address,<sp/>m);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/i-score/API/OSSIA/ossia/network/minuit/minuit.cpp"/>
  </compounddef>
</doxygen>
